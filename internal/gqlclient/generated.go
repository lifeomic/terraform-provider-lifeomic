// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package gqlclient

import (
	"context"
	"encoding/json"
	"fmt"

	"github.com/Khan/genqlient/graphql"
)

type AppLocale struct {
	Description string `json:"description"`
	LangCode    string `json:"langCode"`
	Name        string `json:"name"`
}

// GetDescription returns AppLocale.Description, and is useful for accessing the field via an interface.
func (v *AppLocale) GetDescription() string { return v.Description }

// GetLangCode returns AppLocale.LangCode, and is useful for accessing the field via an interface.
func (v *AppLocale) GetLangCode() string { return v.LangCode }

// GetName returns AppLocale.Name, and is useful for accessing the field via an interface.
func (v *AppLocale) GetName() string { return v.Name }

type AppStoreProduct string

const (
	AppStoreProductLx AppStoreProduct = "LX"
)

// AppTileModule includes the GraphQL fields of MarketplaceModule requested by the fragment AppTileModule.
type AppTileModule struct {
	Title       string                                     `json:"title"`
	Description string                                     `json:"description"`
	Version     string                                     `json:"version"`
	Source      AppTileModuleSourceMarketplaceModuleSource `json:"-"`
	IconV2      *AppTileModuleIconV2MarketplaceModuleImage `json:"iconV2"`
}

// GetTitle returns AppTileModule.Title, and is useful for accessing the field via an interface.
func (v *AppTileModule) GetTitle() string { return v.Title }

// GetDescription returns AppTileModule.Description, and is useful for accessing the field via an interface.
func (v *AppTileModule) GetDescription() string { return v.Description }

// GetVersion returns AppTileModule.Version, and is useful for accessing the field via an interface.
func (v *AppTileModule) GetVersion() string { return v.Version }

// GetSource returns AppTileModule.Source, and is useful for accessing the field via an interface.
func (v *AppTileModule) GetSource() AppTileModuleSourceMarketplaceModuleSource { return v.Source }

// GetIconV2 returns AppTileModule.IconV2, and is useful for accessing the field via an interface.
func (v *AppTileModule) GetIconV2() *AppTileModuleIconV2MarketplaceModuleImage { return v.IconV2 }

func (v *AppTileModule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*AppTileModule
		Source json.RawMessage `json:"source"`
		graphql.NoUnmarshalJSON
	}
	firstPass.AppTileModule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Source
		src := firstPass.Source
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalAppTileModuleSourceMarketplaceModuleSource(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"Unable to unmarshal AppTileModule.Source: %w", err)
			}
		}
	}
	return nil
}

type __premarshalAppTileModule struct {
	Title string `json:"title"`

	Description string `json:"description"`

	Version string `json:"version"`

	Source json.RawMessage `json:"source"`

	IconV2 *AppTileModuleIconV2MarketplaceModuleImage `json:"iconV2"`
}

func (v *AppTileModule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *AppTileModule) __premarshalJSON() (*__premarshalAppTileModule, error) {
	var retval __premarshalAppTileModule

	retval.Title = v.Title
	retval.Description = v.Description
	retval.Version = v.Version
	{

		dst := &retval.Source
		src := v.Source
		var err error
		*dst, err = __marshalAppTileModuleSourceMarketplaceModuleSource(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"Unable to marshal AppTileModule.Source: %w", err)
		}
	}
	retval.IconV2 = v.IconV2
	return &retval, nil
}

// AppTileModuleIconV2MarketplaceModuleImage includes the requested fields of the GraphQL type MarketplaceModuleImage.
type AppTileModuleIconV2MarketplaceModuleImage struct {
	Url           string `json:"url"`
	FileName      string `json:"fileName"`
	FileExtension string `json:"fileExtension"`
}

// GetUrl returns AppTileModuleIconV2MarketplaceModuleImage.Url, and is useful for accessing the field via an interface.
func (v *AppTileModuleIconV2MarketplaceModuleImage) GetUrl() string { return v.Url }

// GetFileName returns AppTileModuleIconV2MarketplaceModuleImage.FileName, and is useful for accessing the field via an interface.
func (v *AppTileModuleIconV2MarketplaceModuleImage) GetFileName() string { return v.FileName }

// GetFileExtension returns AppTileModuleIconV2MarketplaceModuleImage.FileExtension, and is useful for accessing the field via an interface.
func (v *AppTileModuleIconV2MarketplaceModuleImage) GetFileExtension() string { return v.FileExtension }

// AppTileModuleSourceAppTile includes the requested fields of the GraphQL type AppTile.
type AppTileModuleSourceAppTile struct {
	Typename string `json:"__typename"`
	Id       string `json:"id"`
}

// GetTypename returns AppTileModuleSourceAppTile.Typename, and is useful for accessing the field via an interface.
func (v *AppTileModuleSourceAppTile) GetTypename() string { return v.Typename }

// GetId returns AppTileModuleSourceAppTile.Id, and is useful for accessing the field via an interface.
func (v *AppTileModuleSourceAppTile) GetId() string { return v.Id }

// AppTileModuleSourceConsent includes the requested fields of the GraphQL type Consent.
type AppTileModuleSourceConsent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns AppTileModuleSourceConsent.Typename, and is useful for accessing the field via an interface.
func (v *AppTileModuleSourceConsent) GetTypename() string { return v.Typename }

// AppTileModuleSourceDomainOntology includes the requested fields of the GraphQL type DomainOntology.
type AppTileModuleSourceDomainOntology struct {
	Typename string `json:"__typename"`
}

// GetTypename returns AppTileModuleSourceDomainOntology.Typename, and is useful for accessing the field via an interface.
func (v *AppTileModuleSourceDomainOntology) GetTypename() string { return v.Typename }

// AppTileModuleSourceInsightsLayout includes the requested fields of the GraphQL type InsightsLayout.
type AppTileModuleSourceInsightsLayout struct {
	Typename string `json:"__typename"`
}

// GetTypename returns AppTileModuleSourceInsightsLayout.Typename, and is useful for accessing the field via an interface.
func (v *AppTileModuleSourceInsightsLayout) GetTypename() string { return v.Typename }

// AppTileModuleSourceMarketplaceModuleSource includes the requested fields of the GraphQL interface MarketplaceModuleSource.
//
// AppTileModuleSourceMarketplaceModuleSource is implemented by the following types:
// AppTileModuleSourceAppTile
// AppTileModuleSourceConsent
// AppTileModuleSourceDomainOntology
// AppTileModuleSourceInsightsLayout
// AppTileModuleSourceNotebook
// AppTileModuleSourceOcrReportExtractor
// AppTileModuleSourcePatientLayout
// AppTileModuleSourceProcessOntology
// AppTileModuleSourceProgramEnrollment
// AppTileModuleSourceProgramTemplate
// AppTileModuleSourceSearchLayout
// AppTileModuleSourceSurvey
// AppTileModuleSourceWellnessOffering
// AppTileModuleSourceWorkflow
type AppTileModuleSourceMarketplaceModuleSource interface {
	implementsGraphQLInterfaceAppTileModuleSourceMarketplaceModuleSource()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *AppTileModuleSourceAppTile) implementsGraphQLInterfaceAppTileModuleSourceMarketplaceModuleSource() {
}
func (v *AppTileModuleSourceConsent) implementsGraphQLInterfaceAppTileModuleSourceMarketplaceModuleSource() {
}
func (v *AppTileModuleSourceDomainOntology) implementsGraphQLInterfaceAppTileModuleSourceMarketplaceModuleSource() {
}
func (v *AppTileModuleSourceInsightsLayout) implementsGraphQLInterfaceAppTileModuleSourceMarketplaceModuleSource() {
}
func (v *AppTileModuleSourceNotebook) implementsGraphQLInterfaceAppTileModuleSourceMarketplaceModuleSource() {
}
func (v *AppTileModuleSourceOcrReportExtractor) implementsGraphQLInterfaceAppTileModuleSourceMarketplaceModuleSource() {
}
func (v *AppTileModuleSourcePatientLayout) implementsGraphQLInterfaceAppTileModuleSourceMarketplaceModuleSource() {
}
func (v *AppTileModuleSourceProcessOntology) implementsGraphQLInterfaceAppTileModuleSourceMarketplaceModuleSource() {
}
func (v *AppTileModuleSourceProgramEnrollment) implementsGraphQLInterfaceAppTileModuleSourceMarketplaceModuleSource() {
}
func (v *AppTileModuleSourceProgramTemplate) implementsGraphQLInterfaceAppTileModuleSourceMarketplaceModuleSource() {
}
func (v *AppTileModuleSourceSearchLayout) implementsGraphQLInterfaceAppTileModuleSourceMarketplaceModuleSource() {
}
func (v *AppTileModuleSourceSurvey) implementsGraphQLInterfaceAppTileModuleSourceMarketplaceModuleSource() {
}
func (v *AppTileModuleSourceWellnessOffering) implementsGraphQLInterfaceAppTileModuleSourceMarketplaceModuleSource() {
}
func (v *AppTileModuleSourceWorkflow) implementsGraphQLInterfaceAppTileModuleSourceMarketplaceModuleSource() {
}

func __unmarshalAppTileModuleSourceMarketplaceModuleSource(b []byte, v *AppTileModuleSourceMarketplaceModuleSource) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "AppTile":
		*v = new(AppTileModuleSourceAppTile)
		return json.Unmarshal(b, *v)
	case "Consent":
		*v = new(AppTileModuleSourceConsent)
		return json.Unmarshal(b, *v)
	case "DomainOntology":
		*v = new(AppTileModuleSourceDomainOntology)
		return json.Unmarshal(b, *v)
	case "InsightsLayout":
		*v = new(AppTileModuleSourceInsightsLayout)
		return json.Unmarshal(b, *v)
	case "Notebook":
		*v = new(AppTileModuleSourceNotebook)
		return json.Unmarshal(b, *v)
	case "OcrReportExtractor":
		*v = new(AppTileModuleSourceOcrReportExtractor)
		return json.Unmarshal(b, *v)
	case "PatientLayout":
		*v = new(AppTileModuleSourcePatientLayout)
		return json.Unmarshal(b, *v)
	case "ProcessOntology":
		*v = new(AppTileModuleSourceProcessOntology)
		return json.Unmarshal(b, *v)
	case "ProgramEnrollment":
		*v = new(AppTileModuleSourceProgramEnrollment)
		return json.Unmarshal(b, *v)
	case "ProgramTemplate":
		*v = new(AppTileModuleSourceProgramTemplate)
		return json.Unmarshal(b, *v)
	case "SearchLayout":
		*v = new(AppTileModuleSourceSearchLayout)
		return json.Unmarshal(b, *v)
	case "Survey":
		*v = new(AppTileModuleSourceSurvey)
		return json.Unmarshal(b, *v)
	case "WellnessOffering":
		*v = new(AppTileModuleSourceWellnessOffering)
		return json.Unmarshal(b, *v)
	case "Workflow":
		*v = new(AppTileModuleSourceWorkflow)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing MarketplaceModuleSource.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for AppTileModuleSourceMarketplaceModuleSource: "%v"`, tn.TypeName)
	}
}

func __marshalAppTileModuleSourceMarketplaceModuleSource(v *AppTileModuleSourceMarketplaceModuleSource) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *AppTileModuleSourceAppTile:
		typename = "AppTile"

		result := struct {
			TypeName string `json:"__typename"`
			*AppTileModuleSourceAppTile
		}{typename, v}
		return json.Marshal(result)
	case *AppTileModuleSourceConsent:
		typename = "Consent"

		result := struct {
			TypeName string `json:"__typename"`
			*AppTileModuleSourceConsent
		}{typename, v}
		return json.Marshal(result)
	case *AppTileModuleSourceDomainOntology:
		typename = "DomainOntology"

		result := struct {
			TypeName string `json:"__typename"`
			*AppTileModuleSourceDomainOntology
		}{typename, v}
		return json.Marshal(result)
	case *AppTileModuleSourceInsightsLayout:
		typename = "InsightsLayout"

		result := struct {
			TypeName string `json:"__typename"`
			*AppTileModuleSourceInsightsLayout
		}{typename, v}
		return json.Marshal(result)
	case *AppTileModuleSourceNotebook:
		typename = "Notebook"

		result := struct {
			TypeName string `json:"__typename"`
			*AppTileModuleSourceNotebook
		}{typename, v}
		return json.Marshal(result)
	case *AppTileModuleSourceOcrReportExtractor:
		typename = "OcrReportExtractor"

		result := struct {
			TypeName string `json:"__typename"`
			*AppTileModuleSourceOcrReportExtractor
		}{typename, v}
		return json.Marshal(result)
	case *AppTileModuleSourcePatientLayout:
		typename = "PatientLayout"

		result := struct {
			TypeName string `json:"__typename"`
			*AppTileModuleSourcePatientLayout
		}{typename, v}
		return json.Marshal(result)
	case *AppTileModuleSourceProcessOntology:
		typename = "ProcessOntology"

		result := struct {
			TypeName string `json:"__typename"`
			*AppTileModuleSourceProcessOntology
		}{typename, v}
		return json.Marshal(result)
	case *AppTileModuleSourceProgramEnrollment:
		typename = "ProgramEnrollment"

		result := struct {
			TypeName string `json:"__typename"`
			*AppTileModuleSourceProgramEnrollment
		}{typename, v}
		return json.Marshal(result)
	case *AppTileModuleSourceProgramTemplate:
		typename = "ProgramTemplate"

		result := struct {
			TypeName string `json:"__typename"`
			*AppTileModuleSourceProgramTemplate
		}{typename, v}
		return json.Marshal(result)
	case *AppTileModuleSourceSearchLayout:
		typename = "SearchLayout"

		result := struct {
			TypeName string `json:"__typename"`
			*AppTileModuleSourceSearchLayout
		}{typename, v}
		return json.Marshal(result)
	case *AppTileModuleSourceSurvey:
		typename = "Survey"

		result := struct {
			TypeName string `json:"__typename"`
			*AppTileModuleSourceSurvey
		}{typename, v}
		return json.Marshal(result)
	case *AppTileModuleSourceWellnessOffering:
		typename = "WellnessOffering"

		result := struct {
			TypeName string `json:"__typename"`
			*AppTileModuleSourceWellnessOffering
		}{typename, v}
		return json.Marshal(result)
	case *AppTileModuleSourceWorkflow:
		typename = "Workflow"

		result := struct {
			TypeName string `json:"__typename"`
			*AppTileModuleSourceWorkflow
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for AppTileModuleSourceMarketplaceModuleSource: "%T"`, v)
	}
}

// AppTileModuleSourceNotebook includes the requested fields of the GraphQL type Notebook.
type AppTileModuleSourceNotebook struct {
	Typename string `json:"__typename"`
}

// GetTypename returns AppTileModuleSourceNotebook.Typename, and is useful for accessing the field via an interface.
func (v *AppTileModuleSourceNotebook) GetTypename() string { return v.Typename }

// AppTileModuleSourceOcrReportExtractor includes the requested fields of the GraphQL type OcrReportExtractor.
type AppTileModuleSourceOcrReportExtractor struct {
	Typename string `json:"__typename"`
}

// GetTypename returns AppTileModuleSourceOcrReportExtractor.Typename, and is useful for accessing the field via an interface.
func (v *AppTileModuleSourceOcrReportExtractor) GetTypename() string { return v.Typename }

// AppTileModuleSourcePatientLayout includes the requested fields of the GraphQL type PatientLayout.
type AppTileModuleSourcePatientLayout struct {
	Typename string `json:"__typename"`
}

// GetTypename returns AppTileModuleSourcePatientLayout.Typename, and is useful for accessing the field via an interface.
func (v *AppTileModuleSourcePatientLayout) GetTypename() string { return v.Typename }

// AppTileModuleSourceProcessOntology includes the requested fields of the GraphQL type ProcessOntology.
type AppTileModuleSourceProcessOntology struct {
	Typename string `json:"__typename"`
}

// GetTypename returns AppTileModuleSourceProcessOntology.Typename, and is useful for accessing the field via an interface.
func (v *AppTileModuleSourceProcessOntology) GetTypename() string { return v.Typename }

// AppTileModuleSourceProgramEnrollment includes the requested fields of the GraphQL type ProgramEnrollment.
type AppTileModuleSourceProgramEnrollment struct {
	Typename string `json:"__typename"`
}

// GetTypename returns AppTileModuleSourceProgramEnrollment.Typename, and is useful for accessing the field via an interface.
func (v *AppTileModuleSourceProgramEnrollment) GetTypename() string { return v.Typename }

// AppTileModuleSourceProgramTemplate includes the requested fields of the GraphQL type ProgramTemplate.
type AppTileModuleSourceProgramTemplate struct {
	Typename string `json:"__typename"`
}

// GetTypename returns AppTileModuleSourceProgramTemplate.Typename, and is useful for accessing the field via an interface.
func (v *AppTileModuleSourceProgramTemplate) GetTypename() string { return v.Typename }

// AppTileModuleSourceSearchLayout includes the requested fields of the GraphQL type SearchLayout.
type AppTileModuleSourceSearchLayout struct {
	Typename string `json:"__typename"`
}

// GetTypename returns AppTileModuleSourceSearchLayout.Typename, and is useful for accessing the field via an interface.
func (v *AppTileModuleSourceSearchLayout) GetTypename() string { return v.Typename }

// AppTileModuleSourceSurvey includes the requested fields of the GraphQL type Survey.
type AppTileModuleSourceSurvey struct {
	Typename string `json:"__typename"`
}

// GetTypename returns AppTileModuleSourceSurvey.Typename, and is useful for accessing the field via an interface.
func (v *AppTileModuleSourceSurvey) GetTypename() string { return v.Typename }

// AppTileModuleSourceWellnessOffering includes the requested fields of the GraphQL type WellnessOffering.
type AppTileModuleSourceWellnessOffering struct {
	Typename string `json:"__typename"`
}

// GetTypename returns AppTileModuleSourceWellnessOffering.Typename, and is useful for accessing the field via an interface.
func (v *AppTileModuleSourceWellnessOffering) GetTypename() string { return v.Typename }

// AppTileModuleSourceWorkflow includes the requested fields of the GraphQL type Workflow.
type AppTileModuleSourceWorkflow struct {
	Typename string `json:"__typename"`
}

// GetTypename returns AppTileModuleSourceWorkflow.Typename, and is useful for accessing the field via an interface.
func (v *AppTileModuleSourceWorkflow) GetTypename() string { return v.Typename }

// ApproveModuleApproveModulePublishApproveModulePublishResponse includes the requested fields of the GraphQL type ApproveModulePublishResponse.
type ApproveModuleApproveModulePublishApproveModulePublishResponse struct {
	Id      string                                                                                    `json:"id"`
	Version ApproveModuleApproveModulePublishApproveModulePublishResponseVersionModuleVersionResponse `json:"version"`
}

// GetId returns ApproveModuleApproveModulePublishApproveModulePublishResponse.Id, and is useful for accessing the field via an interface.
func (v *ApproveModuleApproveModulePublishApproveModulePublishResponse) GetId() string { return v.Id }

// GetVersion returns ApproveModuleApproveModulePublishApproveModulePublishResponse.Version, and is useful for accessing the field via an interface.
func (v *ApproveModuleApproveModulePublishApproveModulePublishResponse) GetVersion() ApproveModuleApproveModulePublishApproveModulePublishResponseVersionModuleVersionResponse {
	return v.Version
}

// ApproveModuleApproveModulePublishApproveModulePublishResponseVersionModuleVersionResponse includes the requested fields of the GraphQL type ModuleVersionResponse.
type ApproveModuleApproveModulePublishApproveModulePublishResponseVersionModuleVersionResponse struct {
	Version string `json:"version"`
}

// GetVersion returns ApproveModuleApproveModulePublishApproveModulePublishResponseVersionModuleVersionResponse.Version, and is useful for accessing the field via an interface.
func (v *ApproveModuleApproveModulePublishApproveModulePublishResponseVersionModuleVersionResponse) GetVersion() string {
	return v.Version
}

type ApproveModulePublishInput struct {
	Entitlements []Entitlement `json:"entitlements"`
	IsTestModule bool          `json:"isTestModule"`
	ModuleId     string        `json:"moduleId"`
	Notes        string        `json:"notes"`
}

// GetEntitlements returns ApproveModulePublishInput.Entitlements, and is useful for accessing the field via an interface.
func (v *ApproveModulePublishInput) GetEntitlements() []Entitlement { return v.Entitlements }

// GetIsTestModule returns ApproveModulePublishInput.IsTestModule, and is useful for accessing the field via an interface.
func (v *ApproveModulePublishInput) GetIsTestModule() bool { return v.IsTestModule }

// GetModuleId returns ApproveModulePublishInput.ModuleId, and is useful for accessing the field via an interface.
func (v *ApproveModulePublishInput) GetModuleId() string { return v.ModuleId }

// GetNotes returns ApproveModulePublishInput.Notes, and is useful for accessing the field via an interface.
func (v *ApproveModulePublishInput) GetNotes() string { return v.Notes }

// ApproveModuleResponse is returned by ApproveModule on success.
type ApproveModuleResponse struct {
	// Approves draft module review and publishes module to the marketplace
	ApproveModulePublish ApproveModuleApproveModulePublishApproveModulePublishResponse `json:"approveModulePublish"`
}

// GetApproveModulePublish returns ApproveModuleResponse.ApproveModulePublish, and is useful for accessing the field via an interface.
func (v *ApproveModuleResponse) GetApproveModulePublish() ApproveModuleApproveModulePublishApproveModulePublishResponse {
	return v.ApproveModulePublish
}

// AssignModuleReviewToSelfAssignDraftModuleForReviewAssignDraftModuleForReviewResponse includes the requested fields of the GraphQL type AssignDraftModuleForReviewResponse.
type AssignModuleReviewToSelfAssignDraftModuleForReviewAssignDraftModuleForReviewResponse struct {
	AssignedReviewer string `json:"assignedReviewer"`
	ModuleId         string `json:"moduleId"`
}

// GetAssignedReviewer returns AssignModuleReviewToSelfAssignDraftModuleForReviewAssignDraftModuleForReviewResponse.AssignedReviewer, and is useful for accessing the field via an interface.
func (v *AssignModuleReviewToSelfAssignDraftModuleForReviewAssignDraftModuleForReviewResponse) GetAssignedReviewer() string {
	return v.AssignedReviewer
}

// GetModuleId returns AssignModuleReviewToSelfAssignDraftModuleForReviewAssignDraftModuleForReviewResponse.ModuleId, and is useful for accessing the field via an interface.
func (v *AssignModuleReviewToSelfAssignDraftModuleForReviewAssignDraftModuleForReviewResponse) GetModuleId() string {
	return v.ModuleId
}

// AssignModuleReviewToSelfResponse is returned by AssignModuleReviewToSelf on success.
type AssignModuleReviewToSelfResponse struct {
	// Assigns draft module to the current user for manual review
	AssignDraftModuleForReview AssignModuleReviewToSelfAssignDraftModuleForReviewAssignDraftModuleForReviewResponse `json:"assignDraftModuleForReview"`
}

// GetAssignDraftModuleForReview returns AssignModuleReviewToSelfResponse.AssignDraftModuleForReview, and is useful for accessing the field via an interface.
func (v *AssignModuleReviewToSelfResponse) GetAssignDraftModuleForReview() AssignModuleReviewToSelfAssignDraftModuleForReviewAssignDraftModuleForReviewResponse {
	return v.AssignDraftModuleForReview
}

// CreateAppStoreListingCreateWebAppAppStoreWebApplication includes the requested fields of the GraphQL type AppStoreWebApplication.
// The GraphQL type's documentation follows.
//
// a basic app meant to simply be loaded in a browser
type CreateAppStoreListingCreateWebAppAppStoreWebApplication struct {
	Id string `json:"id"`
}

// GetId returns CreateAppStoreListingCreateWebAppAppStoreWebApplication.Id, and is useful for accessing the field via an interface.
func (v *CreateAppStoreListingCreateWebAppAppStoreWebApplication) GetId() string { return v.Id }

// CreateAppStoreListingResponse is returned by CreateAppStoreListing on success.
type CreateAppStoreListingResponse struct {
	CreateWebApp CreateAppStoreListingCreateWebAppAppStoreWebApplication `json:"createWebApp"`
}

// GetCreateWebApp returns CreateAppStoreListingResponse.CreateWebApp, and is useful for accessing the field via an interface.
func (v *CreateAppStoreListingResponse) GetCreateWebApp() CreateAppStoreListingCreateWebAppAppStoreWebApplication {
	return v.CreateWebApp
}

// CreateDraftModuleCreateDraftModuleCreateDraftModuleResponse includes the requested fields of the GraphQL type CreateDraftModuleResponse.
type CreateDraftModuleCreateDraftModuleCreateDraftModuleResponse struct {
	Id string `json:"id"`
}

// GetId returns CreateDraftModuleCreateDraftModuleCreateDraftModuleResponse.Id, and is useful for accessing the field via an interface.
func (v *CreateDraftModuleCreateDraftModuleCreateDraftModuleResponse) GetId() string { return v.Id }

type CreateDraftModuleInput struct {
	Category    ModuleCategory `json:"category"`
	Description string         `json:"description"`
	Icon        any            `json:"icon"`
	// A unique identifier to use for the new module. If not provided, one will be generated.
	Id               string                  `json:"id"`
	Languages        []string                `json:"languages"`
	LicenseDetails   LicenseDetailsInput     `json:"licenseDetails"`
	ParentModuleId   string                  `json:"parentModuleId"`
	PreviewImages    []FileWithDescription   `json:"previewImages"`
	PreviewVideoUrls []string                `json:"previewVideoUrls"`
	Prices           []DraftModulePriceInput `json:"prices"`
	Products         []ModuleProduct         `json:"products"`
	Scope            MarketplaceModuleScope  `json:"scope,omitempty"`
	Support          string                  `json:"support"`
	Tags             []string                `json:"tags"`
	Title            string                  `json:"title"`
	WebsiteUrl       string                  `json:"websiteUrl"`
}

// GetCategory returns CreateDraftModuleInput.Category, and is useful for accessing the field via an interface.
func (v *CreateDraftModuleInput) GetCategory() ModuleCategory { return v.Category }

// GetDescription returns CreateDraftModuleInput.Description, and is useful for accessing the field via an interface.
func (v *CreateDraftModuleInput) GetDescription() string { return v.Description }

// GetIcon returns CreateDraftModuleInput.Icon, and is useful for accessing the field via an interface.
func (v *CreateDraftModuleInput) GetIcon() any { return v.Icon }

// GetId returns CreateDraftModuleInput.Id, and is useful for accessing the field via an interface.
func (v *CreateDraftModuleInput) GetId() string { return v.Id }

// GetLanguages returns CreateDraftModuleInput.Languages, and is useful for accessing the field via an interface.
func (v *CreateDraftModuleInput) GetLanguages() []string { return v.Languages }

// GetLicenseDetails returns CreateDraftModuleInput.LicenseDetails, and is useful for accessing the field via an interface.
func (v *CreateDraftModuleInput) GetLicenseDetails() LicenseDetailsInput { return v.LicenseDetails }

// GetParentModuleId returns CreateDraftModuleInput.ParentModuleId, and is useful for accessing the field via an interface.
func (v *CreateDraftModuleInput) GetParentModuleId() string { return v.ParentModuleId }

// GetPreviewImages returns CreateDraftModuleInput.PreviewImages, and is useful for accessing the field via an interface.
func (v *CreateDraftModuleInput) GetPreviewImages() []FileWithDescription { return v.PreviewImages }

// GetPreviewVideoUrls returns CreateDraftModuleInput.PreviewVideoUrls, and is useful for accessing the field via an interface.
func (v *CreateDraftModuleInput) GetPreviewVideoUrls() []string { return v.PreviewVideoUrls }

// GetPrices returns CreateDraftModuleInput.Prices, and is useful for accessing the field via an interface.
func (v *CreateDraftModuleInput) GetPrices() []DraftModulePriceInput { return v.Prices }

// GetProducts returns CreateDraftModuleInput.Products, and is useful for accessing the field via an interface.
func (v *CreateDraftModuleInput) GetProducts() []ModuleProduct { return v.Products }

// GetScope returns CreateDraftModuleInput.Scope, and is useful for accessing the field via an interface.
func (v *CreateDraftModuleInput) GetScope() MarketplaceModuleScope { return v.Scope }

// GetSupport returns CreateDraftModuleInput.Support, and is useful for accessing the field via an interface.
func (v *CreateDraftModuleInput) GetSupport() string { return v.Support }

// GetTags returns CreateDraftModuleInput.Tags, and is useful for accessing the field via an interface.
func (v *CreateDraftModuleInput) GetTags() []string { return v.Tags }

// GetTitle returns CreateDraftModuleInput.Title, and is useful for accessing the field via an interface.
func (v *CreateDraftModuleInput) GetTitle() string { return v.Title }

// GetWebsiteUrl returns CreateDraftModuleInput.WebsiteUrl, and is useful for accessing the field via an interface.
func (v *CreateDraftModuleInput) GetWebsiteUrl() string { return v.WebsiteUrl }

// CreateDraftModuleResponse is returned by CreateDraftModule on success.
type CreateDraftModuleResponse struct {
	CreateDraftModule CreateDraftModuleCreateDraftModuleCreateDraftModuleResponse `json:"createDraftModule"`
}

// GetCreateDraftModule returns CreateDraftModuleResponse.CreateDraftModule, and is useful for accessing the field via an interface.
func (v *CreateDraftModuleResponse) GetCreateDraftModule() CreateDraftModuleCreateDraftModuleCreateDraftModuleResponse {
	return v.CreateDraftModule
}

type CreateWebAppInput struct {
	AbacResource  string          `json:"abacResource"`
	AuthorDisplay string          `json:"authorDisplay"`
	Description   string          `json:"description"`
	Id            string          `json:"id"`
	Image         string          `json:"image"`
	Locales       []AppLocale     `json:"locales"`
	Name          string          `json:"name"`
	Product       AppStoreProduct `json:"product"`
	Url           string          `json:"url"`
}

// GetAbacResource returns CreateWebAppInput.AbacResource, and is useful for accessing the field via an interface.
func (v *CreateWebAppInput) GetAbacResource() string { return v.AbacResource }

// GetAuthorDisplay returns CreateWebAppInput.AuthorDisplay, and is useful for accessing the field via an interface.
func (v *CreateWebAppInput) GetAuthorDisplay() string { return v.AuthorDisplay }

// GetDescription returns CreateWebAppInput.Description, and is useful for accessing the field via an interface.
func (v *CreateWebAppInput) GetDescription() string { return v.Description }

// GetId returns CreateWebAppInput.Id, and is useful for accessing the field via an interface.
func (v *CreateWebAppInput) GetId() string { return v.Id }

// GetImage returns CreateWebAppInput.Image, and is useful for accessing the field via an interface.
func (v *CreateWebAppInput) GetImage() string { return v.Image }

// GetLocales returns CreateWebAppInput.Locales, and is useful for accessing the field via an interface.
func (v *CreateWebAppInput) GetLocales() []AppLocale { return v.Locales }

// GetName returns CreateWebAppInput.Name, and is useful for accessing the field via an interface.
func (v *CreateWebAppInput) GetName() string { return v.Name }

// GetProduct returns CreateWebAppInput.Product, and is useful for accessing the field via an interface.
func (v *CreateWebAppInput) GetProduct() AppStoreProduct { return v.Product }

// GetUrl returns CreateWebAppInput.Url, and is useful for accessing the field via an interface.
func (v *CreateWebAppInput) GetUrl() string { return v.Url }

// DeleteAppStoreListingResponse is returned by DeleteAppStoreListing on success.
type DeleteAppStoreListingResponse struct {
	DeleteApp bool `json:"deleteApp"`
}

// GetDeleteApp returns DeleteAppStoreListingResponse.DeleteApp, and is useful for accessing the field via an interface.
func (v *DeleteAppStoreListingResponse) GetDeleteApp() bool { return v.DeleteApp }

// DeleteModuleDeleteModuleDeleteModuleResponse includes the requested fields of the GraphQL type DeleteModuleResponse.
type DeleteModuleDeleteModuleDeleteModuleResponse struct {
	Id string `json:"id"`
}

// GetId returns DeleteModuleDeleteModuleDeleteModuleResponse.Id, and is useful for accessing the field via an interface.
func (v *DeleteModuleDeleteModuleDeleteModuleResponse) GetId() string { return v.Id }

type DeleteModuleInput struct {
	ModuleId string `json:"moduleId"`
	Version  string `json:"version"`
}

// GetModuleId returns DeleteModuleInput.ModuleId, and is useful for accessing the field via an interface.
func (v *DeleteModuleInput) GetModuleId() string { return v.ModuleId }

// GetVersion returns DeleteModuleInput.Version, and is useful for accessing the field via an interface.
func (v *DeleteModuleInput) GetVersion() string { return v.Version }

// DeleteModuleResponse is returned by DeleteModule on success.
type DeleteModuleResponse struct {
	DeleteModule DeleteModuleDeleteModuleDeleteModuleResponse `json:"deleteModule"`
}

// GetDeleteModule returns DeleteModuleResponse.DeleteModule, and is useful for accessing the field via an interface.
func (v *DeleteModuleResponse) GetDeleteModule() DeleteModuleDeleteModuleDeleteModuleResponse {
	return v.DeleteModule
}

type DraftModulePriceInput struct {
	// Amount in pennies USD
	Amount   int             `json:"amount"`
	Interval PaymentInterval `json:"interval"`
}

// GetAmount returns DraftModulePriceInput.Amount, and is useful for accessing the field via an interface.
func (v *DraftModulePriceInput) GetAmount() int { return v.Amount }

// GetInterval returns DraftModulePriceInput.Interval, and is useful for accessing the field via an interface.
func (v *DraftModulePriceInput) GetInterval() PaymentInterval { return v.Interval }

// DraftWellnessOfferingModule includes the GraphQL fields of DraftMarketplaceModule requested by the fragment DraftWellnessOfferingModule.
type DraftWellnessOfferingModule struct {
	Id          string                                                   `json:"id"`
	Title       string                                                   `json:"title"`
	Description string                                                   `json:"description"`
	Source      DraftWellnessOfferingModuleSourceMarketplaceModuleSource `json:"-"`
}

// GetId returns DraftWellnessOfferingModule.Id, and is useful for accessing the field via an interface.
func (v *DraftWellnessOfferingModule) GetId() string { return v.Id }

// GetTitle returns DraftWellnessOfferingModule.Title, and is useful for accessing the field via an interface.
func (v *DraftWellnessOfferingModule) GetTitle() string { return v.Title }

// GetDescription returns DraftWellnessOfferingModule.Description, and is useful for accessing the field via an interface.
func (v *DraftWellnessOfferingModule) GetDescription() string { return v.Description }

// GetSource returns DraftWellnessOfferingModule.Source, and is useful for accessing the field via an interface.
func (v *DraftWellnessOfferingModule) GetSource() DraftWellnessOfferingModuleSourceMarketplaceModuleSource {
	return v.Source
}

func (v *DraftWellnessOfferingModule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*DraftWellnessOfferingModule
		Source json.RawMessage `json:"source"`
		graphql.NoUnmarshalJSON
	}
	firstPass.DraftWellnessOfferingModule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Source
		src := firstPass.Source
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalDraftWellnessOfferingModuleSourceMarketplaceModuleSource(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"Unable to unmarshal DraftWellnessOfferingModule.Source: %w", err)
			}
		}
	}
	return nil
}

type __premarshalDraftWellnessOfferingModule struct {
	Id string `json:"id"`

	Title string `json:"title"`

	Description string `json:"description"`

	Source json.RawMessage `json:"source"`
}

func (v *DraftWellnessOfferingModule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *DraftWellnessOfferingModule) __premarshalJSON() (*__premarshalDraftWellnessOfferingModule, error) {
	var retval __premarshalDraftWellnessOfferingModule

	retval.Id = v.Id
	retval.Title = v.Title
	retval.Description = v.Description
	{

		dst := &retval.Source
		src := v.Source
		var err error
		*dst, err = __marshalDraftWellnessOfferingModuleSourceMarketplaceModuleSource(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"Unable to marshal DraftWellnessOfferingModule.Source: %w", err)
		}
	}
	return &retval, nil
}

// DraftWellnessOfferingModuleSourceAppTile includes the requested fields of the GraphQL type AppTile.
type DraftWellnessOfferingModuleSourceAppTile struct {
	Typename string `json:"__typename"`
}

// GetTypename returns DraftWellnessOfferingModuleSourceAppTile.Typename, and is useful for accessing the field via an interface.
func (v *DraftWellnessOfferingModuleSourceAppTile) GetTypename() string { return v.Typename }

// DraftWellnessOfferingModuleSourceConsent includes the requested fields of the GraphQL type Consent.
type DraftWellnessOfferingModuleSourceConsent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns DraftWellnessOfferingModuleSourceConsent.Typename, and is useful for accessing the field via an interface.
func (v *DraftWellnessOfferingModuleSourceConsent) GetTypename() string { return v.Typename }

// DraftWellnessOfferingModuleSourceDomainOntology includes the requested fields of the GraphQL type DomainOntology.
type DraftWellnessOfferingModuleSourceDomainOntology struct {
	Typename string `json:"__typename"`
}

// GetTypename returns DraftWellnessOfferingModuleSourceDomainOntology.Typename, and is useful for accessing the field via an interface.
func (v *DraftWellnessOfferingModuleSourceDomainOntology) GetTypename() string { return v.Typename }

// DraftWellnessOfferingModuleSourceInsightsLayout includes the requested fields of the GraphQL type InsightsLayout.
type DraftWellnessOfferingModuleSourceInsightsLayout struct {
	Typename string `json:"__typename"`
}

// GetTypename returns DraftWellnessOfferingModuleSourceInsightsLayout.Typename, and is useful for accessing the field via an interface.
func (v *DraftWellnessOfferingModuleSourceInsightsLayout) GetTypename() string { return v.Typename }

// DraftWellnessOfferingModuleSourceMarketplaceModuleSource includes the requested fields of the GraphQL interface MarketplaceModuleSource.
//
// DraftWellnessOfferingModuleSourceMarketplaceModuleSource is implemented by the following types:
// DraftWellnessOfferingModuleSourceAppTile
// DraftWellnessOfferingModuleSourceConsent
// DraftWellnessOfferingModuleSourceDomainOntology
// DraftWellnessOfferingModuleSourceInsightsLayout
// DraftWellnessOfferingModuleSourceNotebook
// DraftWellnessOfferingModuleSourceOcrReportExtractor
// DraftWellnessOfferingModuleSourcePatientLayout
// DraftWellnessOfferingModuleSourceProcessOntology
// DraftWellnessOfferingModuleSourceProgramEnrollment
// DraftWellnessOfferingModuleSourceProgramTemplate
// DraftWellnessOfferingModuleSourceSearchLayout
// DraftWellnessOfferingModuleSourceSurvey
// DraftWellnessOfferingModuleSourceWellnessOffering
// DraftWellnessOfferingModuleSourceWorkflow
type DraftWellnessOfferingModuleSourceMarketplaceModuleSource interface {
	implementsGraphQLInterfaceDraftWellnessOfferingModuleSourceMarketplaceModuleSource()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *DraftWellnessOfferingModuleSourceAppTile) implementsGraphQLInterfaceDraftWellnessOfferingModuleSourceMarketplaceModuleSource() {
}
func (v *DraftWellnessOfferingModuleSourceConsent) implementsGraphQLInterfaceDraftWellnessOfferingModuleSourceMarketplaceModuleSource() {
}
func (v *DraftWellnessOfferingModuleSourceDomainOntology) implementsGraphQLInterfaceDraftWellnessOfferingModuleSourceMarketplaceModuleSource() {
}
func (v *DraftWellnessOfferingModuleSourceInsightsLayout) implementsGraphQLInterfaceDraftWellnessOfferingModuleSourceMarketplaceModuleSource() {
}
func (v *DraftWellnessOfferingModuleSourceNotebook) implementsGraphQLInterfaceDraftWellnessOfferingModuleSourceMarketplaceModuleSource() {
}
func (v *DraftWellnessOfferingModuleSourceOcrReportExtractor) implementsGraphQLInterfaceDraftWellnessOfferingModuleSourceMarketplaceModuleSource() {
}
func (v *DraftWellnessOfferingModuleSourcePatientLayout) implementsGraphQLInterfaceDraftWellnessOfferingModuleSourceMarketplaceModuleSource() {
}
func (v *DraftWellnessOfferingModuleSourceProcessOntology) implementsGraphQLInterfaceDraftWellnessOfferingModuleSourceMarketplaceModuleSource() {
}
func (v *DraftWellnessOfferingModuleSourceProgramEnrollment) implementsGraphQLInterfaceDraftWellnessOfferingModuleSourceMarketplaceModuleSource() {
}
func (v *DraftWellnessOfferingModuleSourceProgramTemplate) implementsGraphQLInterfaceDraftWellnessOfferingModuleSourceMarketplaceModuleSource() {
}
func (v *DraftWellnessOfferingModuleSourceSearchLayout) implementsGraphQLInterfaceDraftWellnessOfferingModuleSourceMarketplaceModuleSource() {
}
func (v *DraftWellnessOfferingModuleSourceSurvey) implementsGraphQLInterfaceDraftWellnessOfferingModuleSourceMarketplaceModuleSource() {
}
func (v *DraftWellnessOfferingModuleSourceWellnessOffering) implementsGraphQLInterfaceDraftWellnessOfferingModuleSourceMarketplaceModuleSource() {
}
func (v *DraftWellnessOfferingModuleSourceWorkflow) implementsGraphQLInterfaceDraftWellnessOfferingModuleSourceMarketplaceModuleSource() {
}

func __unmarshalDraftWellnessOfferingModuleSourceMarketplaceModuleSource(b []byte, v *DraftWellnessOfferingModuleSourceMarketplaceModuleSource) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "AppTile":
		*v = new(DraftWellnessOfferingModuleSourceAppTile)
		return json.Unmarshal(b, *v)
	case "Consent":
		*v = new(DraftWellnessOfferingModuleSourceConsent)
		return json.Unmarshal(b, *v)
	case "DomainOntology":
		*v = new(DraftWellnessOfferingModuleSourceDomainOntology)
		return json.Unmarshal(b, *v)
	case "InsightsLayout":
		*v = new(DraftWellnessOfferingModuleSourceInsightsLayout)
		return json.Unmarshal(b, *v)
	case "Notebook":
		*v = new(DraftWellnessOfferingModuleSourceNotebook)
		return json.Unmarshal(b, *v)
	case "OcrReportExtractor":
		*v = new(DraftWellnessOfferingModuleSourceOcrReportExtractor)
		return json.Unmarshal(b, *v)
	case "PatientLayout":
		*v = new(DraftWellnessOfferingModuleSourcePatientLayout)
		return json.Unmarshal(b, *v)
	case "ProcessOntology":
		*v = new(DraftWellnessOfferingModuleSourceProcessOntology)
		return json.Unmarshal(b, *v)
	case "ProgramEnrollment":
		*v = new(DraftWellnessOfferingModuleSourceProgramEnrollment)
		return json.Unmarshal(b, *v)
	case "ProgramTemplate":
		*v = new(DraftWellnessOfferingModuleSourceProgramTemplate)
		return json.Unmarshal(b, *v)
	case "SearchLayout":
		*v = new(DraftWellnessOfferingModuleSourceSearchLayout)
		return json.Unmarshal(b, *v)
	case "Survey":
		*v = new(DraftWellnessOfferingModuleSourceSurvey)
		return json.Unmarshal(b, *v)
	case "WellnessOffering":
		*v = new(DraftWellnessOfferingModuleSourceWellnessOffering)
		return json.Unmarshal(b, *v)
	case "Workflow":
		*v = new(DraftWellnessOfferingModuleSourceWorkflow)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing MarketplaceModuleSource.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for DraftWellnessOfferingModuleSourceMarketplaceModuleSource: "%v"`, tn.TypeName)
	}
}

func __marshalDraftWellnessOfferingModuleSourceMarketplaceModuleSource(v *DraftWellnessOfferingModuleSourceMarketplaceModuleSource) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *DraftWellnessOfferingModuleSourceAppTile:
		typename = "AppTile"

		result := struct {
			TypeName string `json:"__typename"`
			*DraftWellnessOfferingModuleSourceAppTile
		}{typename, v}
		return json.Marshal(result)
	case *DraftWellnessOfferingModuleSourceConsent:
		typename = "Consent"

		result := struct {
			TypeName string `json:"__typename"`
			*DraftWellnessOfferingModuleSourceConsent
		}{typename, v}
		return json.Marshal(result)
	case *DraftWellnessOfferingModuleSourceDomainOntology:
		typename = "DomainOntology"

		result := struct {
			TypeName string `json:"__typename"`
			*DraftWellnessOfferingModuleSourceDomainOntology
		}{typename, v}
		return json.Marshal(result)
	case *DraftWellnessOfferingModuleSourceInsightsLayout:
		typename = "InsightsLayout"

		result := struct {
			TypeName string `json:"__typename"`
			*DraftWellnessOfferingModuleSourceInsightsLayout
		}{typename, v}
		return json.Marshal(result)
	case *DraftWellnessOfferingModuleSourceNotebook:
		typename = "Notebook"

		result := struct {
			TypeName string `json:"__typename"`
			*DraftWellnessOfferingModuleSourceNotebook
		}{typename, v}
		return json.Marshal(result)
	case *DraftWellnessOfferingModuleSourceOcrReportExtractor:
		typename = "OcrReportExtractor"

		result := struct {
			TypeName string `json:"__typename"`
			*DraftWellnessOfferingModuleSourceOcrReportExtractor
		}{typename, v}
		return json.Marshal(result)
	case *DraftWellnessOfferingModuleSourcePatientLayout:
		typename = "PatientLayout"

		result := struct {
			TypeName string `json:"__typename"`
			*DraftWellnessOfferingModuleSourcePatientLayout
		}{typename, v}
		return json.Marshal(result)
	case *DraftWellnessOfferingModuleSourceProcessOntology:
		typename = "ProcessOntology"

		result := struct {
			TypeName string `json:"__typename"`
			*DraftWellnessOfferingModuleSourceProcessOntology
		}{typename, v}
		return json.Marshal(result)
	case *DraftWellnessOfferingModuleSourceProgramEnrollment:
		typename = "ProgramEnrollment"

		result := struct {
			TypeName string `json:"__typename"`
			*DraftWellnessOfferingModuleSourceProgramEnrollment
		}{typename, v}
		return json.Marshal(result)
	case *DraftWellnessOfferingModuleSourceProgramTemplate:
		typename = "ProgramTemplate"

		result := struct {
			TypeName string `json:"__typename"`
			*DraftWellnessOfferingModuleSourceProgramTemplate
		}{typename, v}
		return json.Marshal(result)
	case *DraftWellnessOfferingModuleSourceSearchLayout:
		typename = "SearchLayout"

		result := struct {
			TypeName string `json:"__typename"`
			*DraftWellnessOfferingModuleSourceSearchLayout
		}{typename, v}
		return json.Marshal(result)
	case *DraftWellnessOfferingModuleSourceSurvey:
		typename = "Survey"

		result := struct {
			TypeName string `json:"__typename"`
			*DraftWellnessOfferingModuleSourceSurvey
		}{typename, v}
		return json.Marshal(result)
	case *DraftWellnessOfferingModuleSourceWellnessOffering:
		typename = "WellnessOffering"

		premarshaled, err := v.__premarshalJSON()
		if err != nil {
			return nil, err
		}
		result := struct {
			TypeName string `json:"__typename"`
			*__premarshalDraftWellnessOfferingModuleSourceWellnessOffering
		}{typename, premarshaled}
		return json.Marshal(result)
	case *DraftWellnessOfferingModuleSourceWorkflow:
		typename = "Workflow"

		result := struct {
			TypeName string `json:"__typename"`
			*DraftWellnessOfferingModuleSourceWorkflow
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for DraftWellnessOfferingModuleSourceMarketplaceModuleSource: "%T"`, v)
	}
}

// DraftWellnessOfferingModuleSourceNotebook includes the requested fields of the GraphQL type Notebook.
type DraftWellnessOfferingModuleSourceNotebook struct {
	Typename string `json:"__typename"`
}

// GetTypename returns DraftWellnessOfferingModuleSourceNotebook.Typename, and is useful for accessing the field via an interface.
func (v *DraftWellnessOfferingModuleSourceNotebook) GetTypename() string { return v.Typename }

// DraftWellnessOfferingModuleSourceOcrReportExtractor includes the requested fields of the GraphQL type OcrReportExtractor.
type DraftWellnessOfferingModuleSourceOcrReportExtractor struct {
	Typename string `json:"__typename"`
}

// GetTypename returns DraftWellnessOfferingModuleSourceOcrReportExtractor.Typename, and is useful for accessing the field via an interface.
func (v *DraftWellnessOfferingModuleSourceOcrReportExtractor) GetTypename() string { return v.Typename }

// DraftWellnessOfferingModuleSourcePatientLayout includes the requested fields of the GraphQL type PatientLayout.
type DraftWellnessOfferingModuleSourcePatientLayout struct {
	Typename string `json:"__typename"`
}

// GetTypename returns DraftWellnessOfferingModuleSourcePatientLayout.Typename, and is useful for accessing the field via an interface.
func (v *DraftWellnessOfferingModuleSourcePatientLayout) GetTypename() string { return v.Typename }

// DraftWellnessOfferingModuleSourceProcessOntology includes the requested fields of the GraphQL type ProcessOntology.
type DraftWellnessOfferingModuleSourceProcessOntology struct {
	Typename string `json:"__typename"`
}

// GetTypename returns DraftWellnessOfferingModuleSourceProcessOntology.Typename, and is useful for accessing the field via an interface.
func (v *DraftWellnessOfferingModuleSourceProcessOntology) GetTypename() string { return v.Typename }

// DraftWellnessOfferingModuleSourceProgramEnrollment includes the requested fields of the GraphQL type ProgramEnrollment.
type DraftWellnessOfferingModuleSourceProgramEnrollment struct {
	Typename string `json:"__typename"`
}

// GetTypename returns DraftWellnessOfferingModuleSourceProgramEnrollment.Typename, and is useful for accessing the field via an interface.
func (v *DraftWellnessOfferingModuleSourceProgramEnrollment) GetTypename() string { return v.Typename }

// DraftWellnessOfferingModuleSourceProgramTemplate includes the requested fields of the GraphQL type ProgramTemplate.
type DraftWellnessOfferingModuleSourceProgramTemplate struct {
	Typename string `json:"__typename"`
}

// GetTypename returns DraftWellnessOfferingModuleSourceProgramTemplate.Typename, and is useful for accessing the field via an interface.
func (v *DraftWellnessOfferingModuleSourceProgramTemplate) GetTypename() string { return v.Typename }

// DraftWellnessOfferingModuleSourceSearchLayout includes the requested fields of the GraphQL type SearchLayout.
type DraftWellnessOfferingModuleSourceSearchLayout struct {
	Typename string `json:"__typename"`
}

// GetTypename returns DraftWellnessOfferingModuleSourceSearchLayout.Typename, and is useful for accessing the field via an interface.
func (v *DraftWellnessOfferingModuleSourceSearchLayout) GetTypename() string { return v.Typename }

// DraftWellnessOfferingModuleSourceSurvey includes the requested fields of the GraphQL type Survey.
type DraftWellnessOfferingModuleSourceSurvey struct {
	Typename string `json:"__typename"`
}

// GetTypename returns DraftWellnessOfferingModuleSourceSurvey.Typename, and is useful for accessing the field via an interface.
func (v *DraftWellnessOfferingModuleSourceSurvey) GetTypename() string { return v.Typename }

// DraftWellnessOfferingModuleSourceWellnessOffering includes the requested fields of the GraphQL type WellnessOffering.
type DraftWellnessOfferingModuleSourceWellnessOffering struct {
	Typename               string `json:"__typename"`
	WellnessOfferingSource `json:"-"`
}

// GetTypename returns DraftWellnessOfferingModuleSourceWellnessOffering.Typename, and is useful for accessing the field via an interface.
func (v *DraftWellnessOfferingModuleSourceWellnessOffering) GetTypename() string { return v.Typename }

// GetId returns DraftWellnessOfferingModuleSourceWellnessOffering.Id, and is useful for accessing the field via an interface.
func (v *DraftWellnessOfferingModuleSourceWellnessOffering) GetId() string {
	return v.WellnessOfferingSource.Id
}

// GetProvider returns DraftWellnessOfferingModuleSourceWellnessOffering.Provider, and is useful for accessing the field via an interface.
func (v *DraftWellnessOfferingModuleSourceWellnessOffering) GetProvider() string {
	return v.WellnessOfferingSource.Provider
}

// GetImageUrl returns DraftWellnessOfferingModuleSourceWellnessOffering.ImageUrl, and is useful for accessing the field via an interface.
func (v *DraftWellnessOfferingModuleSourceWellnessOffering) GetImageUrl() string {
	return v.WellnessOfferingSource.ImageUrl
}

// GetInfoUrl returns DraftWellnessOfferingModuleSourceWellnessOffering.InfoUrl, and is useful for accessing the field via an interface.
func (v *DraftWellnessOfferingModuleSourceWellnessOffering) GetInfoUrl() string {
	return v.WellnessOfferingSource.InfoUrl
}

// GetConfigurationSchema returns DraftWellnessOfferingModuleSourceWellnessOffering.ConfigurationSchema, and is useful for accessing the field via an interface.
func (v *DraftWellnessOfferingModuleSourceWellnessOffering) GetConfigurationSchema() string {
	return v.WellnessOfferingSource.ConfigurationSchema
}

// GetApproximateUnitCost returns DraftWellnessOfferingModuleSourceWellnessOffering.ApproximateUnitCost, and is useful for accessing the field via an interface.
func (v *DraftWellnessOfferingModuleSourceWellnessOffering) GetApproximateUnitCost() int {
	return v.WellnessOfferingSource.ApproximateUnitCost
}

// GetSubsidyType returns DraftWellnessOfferingModuleSourceWellnessOffering.SubsidyType, and is useful for accessing the field via an interface.
func (v *DraftWellnessOfferingModuleSourceWellnessOffering) GetSubsidyType() SubsidyType {
	return v.WellnessOfferingSource.SubsidyType
}

// GetAppLink returns DraftWellnessOfferingModuleSourceWellnessOffering.AppLink, and is useful for accessing the field via an interface.
func (v *DraftWellnessOfferingModuleSourceWellnessOffering) GetAppLink() string {
	return v.WellnessOfferingSource.AppLink
}

// GetIconUrl returns DraftWellnessOfferingModuleSourceWellnessOffering.IconUrl, and is useful for accessing the field via an interface.
func (v *DraftWellnessOfferingModuleSourceWellnessOffering) GetIconUrl() string {
	return v.WellnessOfferingSource.IconUrl
}

// GetPriceRange returns DraftWellnessOfferingModuleSourceWellnessOffering.PriceRange, and is useful for accessing the field via an interface.
func (v *DraftWellnessOfferingModuleSourceWellnessOffering) GetPriceRange() WellnessOfferingSourcePriceRange {
	return v.WellnessOfferingSource.PriceRange
}

func (v *DraftWellnessOfferingModuleSourceWellnessOffering) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*DraftWellnessOfferingModuleSourceWellnessOffering
		graphql.NoUnmarshalJSON
	}
	firstPass.DraftWellnessOfferingModuleSourceWellnessOffering = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.WellnessOfferingSource)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalDraftWellnessOfferingModuleSourceWellnessOffering struct {
	Typename string `json:"__typename"`

	Id string `json:"id"`

	Provider string `json:"provider"`

	ImageUrl string `json:"imageUrl"`

	InfoUrl string `json:"infoUrl"`

	ConfigurationSchema string `json:"configurationSchema"`

	ApproximateUnitCost int `json:"approximateUnitCost"`

	SubsidyType SubsidyType `json:"subsidyType"`

	AppLink string `json:"appLink"`

	IconUrl string `json:"iconUrl"`

	PriceRange WellnessOfferingSourcePriceRange `json:"priceRange"`
}

func (v *DraftWellnessOfferingModuleSourceWellnessOffering) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *DraftWellnessOfferingModuleSourceWellnessOffering) __premarshalJSON() (*__premarshalDraftWellnessOfferingModuleSourceWellnessOffering, error) {
	var retval __premarshalDraftWellnessOfferingModuleSourceWellnessOffering

	retval.Typename = v.Typename
	retval.Id = v.WellnessOfferingSource.Id
	retval.Provider = v.WellnessOfferingSource.Provider
	retval.ImageUrl = v.WellnessOfferingSource.ImageUrl
	retval.InfoUrl = v.WellnessOfferingSource.InfoUrl
	retval.ConfigurationSchema = v.WellnessOfferingSource.ConfigurationSchema
	retval.ApproximateUnitCost = v.WellnessOfferingSource.ApproximateUnitCost
	retval.SubsidyType = v.WellnessOfferingSource.SubsidyType
	retval.AppLink = v.WellnessOfferingSource.AppLink
	retval.IconUrl = v.WellnessOfferingSource.IconUrl
	retval.PriceRange = v.WellnessOfferingSource.PriceRange
	return &retval, nil
}

// DraftWellnessOfferingModuleSourceWorkflow includes the requested fields of the GraphQL type Workflow.
type DraftWellnessOfferingModuleSourceWorkflow struct {
	Typename string `json:"__typename"`
}

// GetTypename returns DraftWellnessOfferingModuleSourceWorkflow.Typename, and is useful for accessing the field via an interface.
func (v *DraftWellnessOfferingModuleSourceWorkflow) GetTypename() string { return v.Typename }

// EditAppStoreListingResponse is returned by EditAppStoreListing on success.
type EditAppStoreListingResponse struct {
	EditWebApp bool `json:"editWebApp"`
}

// GetEditWebApp returns EditAppStoreListingResponse.EditWebApp, and is useful for accessing the field via an interface.
func (v *EditAppStoreListingResponse) GetEditWebApp() bool { return v.EditWebApp }

type EditWebAppInput struct {
	AbacResource  string      `json:"abacResource"`
	AuthorDisplay string      `json:"authorDisplay"`
	Description   string      `json:"description"`
	Image         string      `json:"image"`
	Locales       []AppLocale `json:"locales"`
	Name          string      `json:"name"`
	Url           string      `json:"url"`
}

// GetAbacResource returns EditWebAppInput.AbacResource, and is useful for accessing the field via an interface.
func (v *EditWebAppInput) GetAbacResource() string { return v.AbacResource }

// GetAuthorDisplay returns EditWebAppInput.AuthorDisplay, and is useful for accessing the field via an interface.
func (v *EditWebAppInput) GetAuthorDisplay() string { return v.AuthorDisplay }

// GetDescription returns EditWebAppInput.Description, and is useful for accessing the field via an interface.
func (v *EditWebAppInput) GetDescription() string { return v.Description }

// GetImage returns EditWebAppInput.Image, and is useful for accessing the field via an interface.
func (v *EditWebAppInput) GetImage() string { return v.Image }

// GetLocales returns EditWebAppInput.Locales, and is useful for accessing the field via an interface.
func (v *EditWebAppInput) GetLocales() []AppLocale { return v.Locales }

// GetName returns EditWebAppInput.Name, and is useful for accessing the field via an interface.
func (v *EditWebAppInput) GetName() string { return v.Name }

// GetUrl returns EditWebAppInput.Url, and is useful for accessing the field via an interface.
func (v *EditWebAppInput) GetUrl() string { return v.Url }

type Entitlement string

const (
	EntitlementLifeascent       Entitlement = "lifeAscent"
	EntitlementLifeascentlegacy Entitlement = "lifeAscentLegacy"
	EntitlementLifeplus         Entitlement = "lifePlus"
)

type FileWithDescription struct {
	Description string `json:"description"`
	File        any    `json:"file"`
}

// GetDescription returns FileWithDescription.Description, and is useful for accessing the field via an interface.
func (v *FileWithDescription) GetDescription() string { return v.Description }

// GetFile returns FileWithDescription.File, and is useful for accessing the field via an interface.
func (v *FileWithDescription) GetFile() any { return v.File }

// FinalizeImageUploadFinalizeUploadFinalizeUploadResponse includes the requested fields of the GraphQL type FinalizeUploadResponse.
type FinalizeImageUploadFinalizeUploadFinalizeUploadResponse struct {
	ModuleId string `json:"moduleId"`
}

// GetModuleId returns FinalizeImageUploadFinalizeUploadFinalizeUploadResponse.ModuleId, and is useful for accessing the field via an interface.
func (v *FinalizeImageUploadFinalizeUploadFinalizeUploadResponse) GetModuleId() string {
	return v.ModuleId
}

// FinalizeImageUploadResponse is returned by FinalizeImageUpload on success.
type FinalizeImageUploadResponse struct {
	FinalizeUpload FinalizeImageUploadFinalizeUploadFinalizeUploadResponse `json:"finalizeUpload"`
}

// GetFinalizeUpload returns FinalizeImageUploadResponse.FinalizeUpload, and is useful for accessing the field via an interface.
func (v *FinalizeImageUploadResponse) GetFinalizeUpload() FinalizeImageUploadFinalizeUploadFinalizeUploadResponse {
	return v.FinalizeUpload
}

type FinalizeUploadInput struct {
	Description string     `json:"description"`
	Id          string     `json:"id"`
	ModuleId    string     `json:"moduleId"`
	Priority    int        `json:"priority"`
	Type        UploadType `json:"type"`
}

// GetDescription returns FinalizeUploadInput.Description, and is useful for accessing the field via an interface.
func (v *FinalizeUploadInput) GetDescription() string { return v.Description }

// GetId returns FinalizeUploadInput.Id, and is useful for accessing the field via an interface.
func (v *FinalizeUploadInput) GetId() string { return v.Id }

// GetModuleId returns FinalizeUploadInput.ModuleId, and is useful for accessing the field via an interface.
func (v *FinalizeUploadInput) GetModuleId() string { return v.ModuleId }

// GetPriority returns FinalizeUploadInput.Priority, and is useful for accessing the field via an interface.
func (v *FinalizeUploadInput) GetPriority() int { return v.Priority }

// GetType returns FinalizeUploadInput.Type, and is useful for accessing the field via an interface.
func (v *FinalizeUploadInput) GetType() UploadType { return v.Type }

// GetAppStoreListingAppAppStoreApplication includes the requested fields of the GraphQL interface AppStoreApplication.
//
// GetAppStoreListingAppAppStoreApplication is implemented by the following types:
// GetAppStoreListingAppAppStoreWebApplication
type GetAppStoreListingAppAppStoreApplication interface {
	implementsGraphQLInterfaceGetAppStoreListingAppAppStoreApplication()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
	// GetName returns the interface-field "name" from its implementation.
	GetName() string
	// GetDescription returns the interface-field "description" from its implementation.
	GetDescription() string
	// GetAuthorDisplay returns the interface-field "authorDisplay" from its implementation.
	// The GraphQL interface field's documentation follows.
	//
	// Optional display string - used to display the author if not LifeOmic
	GetAuthorDisplay() string
	// GetImage returns the interface-field "image" from its implementation.
	GetImage() string
}

func (v *GetAppStoreListingAppAppStoreWebApplication) implementsGraphQLInterfaceGetAppStoreListingAppAppStoreApplication() {
}

func __unmarshalGetAppStoreListingAppAppStoreApplication(b []byte, v *GetAppStoreListingAppAppStoreApplication) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "AppStoreWebApplication":
		*v = new(GetAppStoreListingAppAppStoreWebApplication)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing AppStoreApplication.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for GetAppStoreListingAppAppStoreApplication: "%v"`, tn.TypeName)
	}
}

func __marshalGetAppStoreListingAppAppStoreApplication(v *GetAppStoreListingAppAppStoreApplication) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *GetAppStoreListingAppAppStoreWebApplication:
		typename = "AppStoreWebApplication"

		result := struct {
			TypeName string `json:"__typename"`
			*GetAppStoreListingAppAppStoreWebApplication
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for GetAppStoreListingAppAppStoreApplication: "%T"`, v)
	}
}

// GetAppStoreListingAppAppStoreWebApplication includes the requested fields of the GraphQL type AppStoreWebApplication.
// The GraphQL type's documentation follows.
//
// a basic app meant to simply be loaded in a browser
type GetAppStoreListingAppAppStoreWebApplication struct {
	Typename    string `json:"__typename"`
	Name        string `json:"name"`
	Description string `json:"description"`
	// Optional display string - used to display the author if not LifeOmic
	AuthorDisplay string `json:"authorDisplay"`
	Image         string `json:"image"`
	Url           string `json:"url"`
}

// GetTypename returns GetAppStoreListingAppAppStoreWebApplication.Typename, and is useful for accessing the field via an interface.
func (v *GetAppStoreListingAppAppStoreWebApplication) GetTypename() string { return v.Typename }

// GetName returns GetAppStoreListingAppAppStoreWebApplication.Name, and is useful for accessing the field via an interface.
func (v *GetAppStoreListingAppAppStoreWebApplication) GetName() string { return v.Name }

// GetDescription returns GetAppStoreListingAppAppStoreWebApplication.Description, and is useful for accessing the field via an interface.
func (v *GetAppStoreListingAppAppStoreWebApplication) GetDescription() string { return v.Description }

// GetAuthorDisplay returns GetAppStoreListingAppAppStoreWebApplication.AuthorDisplay, and is useful for accessing the field via an interface.
func (v *GetAppStoreListingAppAppStoreWebApplication) GetAuthorDisplay() string {
	return v.AuthorDisplay
}

// GetImage returns GetAppStoreListingAppAppStoreWebApplication.Image, and is useful for accessing the field via an interface.
func (v *GetAppStoreListingAppAppStoreWebApplication) GetImage() string { return v.Image }

// GetUrl returns GetAppStoreListingAppAppStoreWebApplication.Url, and is useful for accessing the field via an interface.
func (v *GetAppStoreListingAppAppStoreWebApplication) GetUrl() string { return v.Url }

// GetAppStoreListingResponse is returned by GetAppStoreListing on success.
type GetAppStoreListingResponse struct {
	App GetAppStoreListingAppAppStoreApplication `json:"-"`
}

// GetApp returns GetAppStoreListingResponse.App, and is useful for accessing the field via an interface.
func (v *GetAppStoreListingResponse) GetApp() GetAppStoreListingAppAppStoreApplication { return v.App }

func (v *GetAppStoreListingResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*GetAppStoreListingResponse
		App json.RawMessage `json:"app"`
		graphql.NoUnmarshalJSON
	}
	firstPass.GetAppStoreListingResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.App
		src := firstPass.App
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalGetAppStoreListingAppAppStoreApplication(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"Unable to unmarshal GetAppStoreListingResponse.App: %w", err)
			}
		}
	}
	return nil
}

type __premarshalGetAppStoreListingResponse struct {
	App json.RawMessage `json:"app"`
}

func (v *GetAppStoreListingResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *GetAppStoreListingResponse) __premarshalJSON() (*__premarshalGetAppStoreListingResponse, error) {
	var retval __premarshalGetAppStoreListingResponse

	{

		dst := &retval.App
		src := v.App
		var err error
		*dst, err = __marshalGetAppStoreListingAppAppStoreApplication(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"Unable to marshal GetAppStoreListingResponse.App: %w", err)
		}
	}
	return &retval, nil
}

// GetDraftWellnessOfferingModuleDraftModuleDraftMarketplaceModule includes the requested fields of the GraphQL type DraftMarketplaceModule.
type GetDraftWellnessOfferingModuleDraftModuleDraftMarketplaceModule struct {
	DraftWellnessOfferingModule `json:"-"`
}

// GetId returns GetDraftWellnessOfferingModuleDraftModuleDraftMarketplaceModule.Id, and is useful for accessing the field via an interface.
func (v *GetDraftWellnessOfferingModuleDraftModuleDraftMarketplaceModule) GetId() string {
	return v.DraftWellnessOfferingModule.Id
}

// GetTitle returns GetDraftWellnessOfferingModuleDraftModuleDraftMarketplaceModule.Title, and is useful for accessing the field via an interface.
func (v *GetDraftWellnessOfferingModuleDraftModuleDraftMarketplaceModule) GetTitle() string {
	return v.DraftWellnessOfferingModule.Title
}

// GetDescription returns GetDraftWellnessOfferingModuleDraftModuleDraftMarketplaceModule.Description, and is useful for accessing the field via an interface.
func (v *GetDraftWellnessOfferingModuleDraftModuleDraftMarketplaceModule) GetDescription() string {
	return v.DraftWellnessOfferingModule.Description
}

// GetSource returns GetDraftWellnessOfferingModuleDraftModuleDraftMarketplaceModule.Source, and is useful for accessing the field via an interface.
func (v *GetDraftWellnessOfferingModuleDraftModuleDraftMarketplaceModule) GetSource() DraftWellnessOfferingModuleSourceMarketplaceModuleSource {
	return v.DraftWellnessOfferingModule.Source
}

func (v *GetDraftWellnessOfferingModuleDraftModuleDraftMarketplaceModule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*GetDraftWellnessOfferingModuleDraftModuleDraftMarketplaceModule
		graphql.NoUnmarshalJSON
	}
	firstPass.GetDraftWellnessOfferingModuleDraftModuleDraftMarketplaceModule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.DraftWellnessOfferingModule)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalGetDraftWellnessOfferingModuleDraftModuleDraftMarketplaceModule struct {
	Id string `json:"id"`

	Title string `json:"title"`

	Description string `json:"description"`

	Source json.RawMessage `json:"source"`
}

func (v *GetDraftWellnessOfferingModuleDraftModuleDraftMarketplaceModule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *GetDraftWellnessOfferingModuleDraftModuleDraftMarketplaceModule) __premarshalJSON() (*__premarshalGetDraftWellnessOfferingModuleDraftModuleDraftMarketplaceModule, error) {
	var retval __premarshalGetDraftWellnessOfferingModuleDraftModuleDraftMarketplaceModule

	retval.Id = v.DraftWellnessOfferingModule.Id
	retval.Title = v.DraftWellnessOfferingModule.Title
	retval.Description = v.DraftWellnessOfferingModule.Description
	{

		dst := &retval.Source
		src := v.DraftWellnessOfferingModule.Source
		var err error
		*dst, err = __marshalDraftWellnessOfferingModuleSourceMarketplaceModuleSource(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"Unable to marshal GetDraftWellnessOfferingModuleDraftModuleDraftMarketplaceModule.DraftWellnessOfferingModule.Source: %w", err)
		}
	}
	return &retval, nil
}

// GetDraftWellnessOfferingModuleResponse is returned by GetDraftWellnessOfferingModule on success.
type GetDraftWellnessOfferingModuleResponse struct {
	DraftModule GetDraftWellnessOfferingModuleDraftModuleDraftMarketplaceModule `json:"draftModule"`
}

// GetDraftModule returns GetDraftWellnessOfferingModuleResponse.DraftModule, and is useful for accessing the field via an interface.
func (v *GetDraftWellnessOfferingModuleResponse) GetDraftModule() GetDraftWellnessOfferingModuleDraftModuleDraftMarketplaceModule {
	return v.DraftModule
}

// GetPublishedModuleMyModuleMarketplaceModule includes the requested fields of the GraphQL type MarketplaceModule.
type GetPublishedModuleMyModuleMarketplaceModule struct {
	AppTileModule `json:"-"`
}

// GetTitle returns GetPublishedModuleMyModuleMarketplaceModule.Title, and is useful for accessing the field via an interface.
func (v *GetPublishedModuleMyModuleMarketplaceModule) GetTitle() string { return v.AppTileModule.Title }

// GetDescription returns GetPublishedModuleMyModuleMarketplaceModule.Description, and is useful for accessing the field via an interface.
func (v *GetPublishedModuleMyModuleMarketplaceModule) GetDescription() string {
	return v.AppTileModule.Description
}

// GetVersion returns GetPublishedModuleMyModuleMarketplaceModule.Version, and is useful for accessing the field via an interface.
func (v *GetPublishedModuleMyModuleMarketplaceModule) GetVersion() string {
	return v.AppTileModule.Version
}

// GetSource returns GetPublishedModuleMyModuleMarketplaceModule.Source, and is useful for accessing the field via an interface.
func (v *GetPublishedModuleMyModuleMarketplaceModule) GetSource() AppTileModuleSourceMarketplaceModuleSource {
	return v.AppTileModule.Source
}

// GetIconV2 returns GetPublishedModuleMyModuleMarketplaceModule.IconV2, and is useful for accessing the field via an interface.
func (v *GetPublishedModuleMyModuleMarketplaceModule) GetIconV2() *AppTileModuleIconV2MarketplaceModuleImage {
	return v.AppTileModule.IconV2
}

func (v *GetPublishedModuleMyModuleMarketplaceModule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*GetPublishedModuleMyModuleMarketplaceModule
		graphql.NoUnmarshalJSON
	}
	firstPass.GetPublishedModuleMyModuleMarketplaceModule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.AppTileModule)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalGetPublishedModuleMyModuleMarketplaceModule struct {
	Title string `json:"title"`

	Description string `json:"description"`

	Version string `json:"version"`

	Source json.RawMessage `json:"source"`

	IconV2 *AppTileModuleIconV2MarketplaceModuleImage `json:"iconV2"`
}

func (v *GetPublishedModuleMyModuleMarketplaceModule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *GetPublishedModuleMyModuleMarketplaceModule) __premarshalJSON() (*__premarshalGetPublishedModuleMyModuleMarketplaceModule, error) {
	var retval __premarshalGetPublishedModuleMyModuleMarketplaceModule

	retval.Title = v.AppTileModule.Title
	retval.Description = v.AppTileModule.Description
	retval.Version = v.AppTileModule.Version
	{

		dst := &retval.Source
		src := v.AppTileModule.Source
		var err error
		*dst, err = __marshalAppTileModuleSourceMarketplaceModuleSource(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"Unable to marshal GetPublishedModuleMyModuleMarketplaceModule.AppTileModule.Source: %w", err)
		}
	}
	retval.IconV2 = v.AppTileModule.IconV2
	return &retval, nil
}

// GetPublishedModuleResponse is returned by GetPublishedModule on success.
type GetPublishedModuleResponse struct {
	MyModule GetPublishedModuleMyModuleMarketplaceModule `json:"myModule"`
}

// GetMyModule returns GetPublishedModuleResponse.MyModule, and is useful for accessing the field via an interface.
func (v *GetPublishedModuleResponse) GetMyModule() GetPublishedModuleMyModuleMarketplaceModule {
	return v.MyModule
}

// GetWellnessOfferingModuleMyModuleMarketplaceModule includes the requested fields of the GraphQL type MarketplaceModule.
type GetWellnessOfferingModuleMyModuleMarketplaceModule struct {
	WellnessOfferingModule `json:"-"`
}

// GetId returns GetWellnessOfferingModuleMyModuleMarketplaceModule.Id, and is useful for accessing the field via an interface.
func (v *GetWellnessOfferingModuleMyModuleMarketplaceModule) GetId() string {
	return v.WellnessOfferingModule.Id
}

// GetTitle returns GetWellnessOfferingModuleMyModuleMarketplaceModule.Title, and is useful for accessing the field via an interface.
func (v *GetWellnessOfferingModuleMyModuleMarketplaceModule) GetTitle() string {
	return v.WellnessOfferingModule.Title
}

// GetDescription returns GetWellnessOfferingModuleMyModuleMarketplaceModule.Description, and is useful for accessing the field via an interface.
func (v *GetWellnessOfferingModuleMyModuleMarketplaceModule) GetDescription() string {
	return v.WellnessOfferingModule.Description
}

// GetVersion returns GetWellnessOfferingModuleMyModuleMarketplaceModule.Version, and is useful for accessing the field via an interface.
func (v *GetWellnessOfferingModuleMyModuleMarketplaceModule) GetVersion() string {
	return v.WellnessOfferingModule.Version
}

// GetSource returns GetWellnessOfferingModuleMyModuleMarketplaceModule.Source, and is useful for accessing the field via an interface.
func (v *GetWellnessOfferingModuleMyModuleMarketplaceModule) GetSource() WellnessOfferingModuleSourceMarketplaceModuleSource {
	return v.WellnessOfferingModule.Source
}

func (v *GetWellnessOfferingModuleMyModuleMarketplaceModule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*GetWellnessOfferingModuleMyModuleMarketplaceModule
		graphql.NoUnmarshalJSON
	}
	firstPass.GetWellnessOfferingModuleMyModuleMarketplaceModule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.WellnessOfferingModule)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalGetWellnessOfferingModuleMyModuleMarketplaceModule struct {
	Id string `json:"id"`

	Title string `json:"title"`

	Description string `json:"description"`

	Version string `json:"version"`

	Source json.RawMessage `json:"source"`
}

func (v *GetWellnessOfferingModuleMyModuleMarketplaceModule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *GetWellnessOfferingModuleMyModuleMarketplaceModule) __premarshalJSON() (*__premarshalGetWellnessOfferingModuleMyModuleMarketplaceModule, error) {
	var retval __premarshalGetWellnessOfferingModuleMyModuleMarketplaceModule

	retval.Id = v.WellnessOfferingModule.Id
	retval.Title = v.WellnessOfferingModule.Title
	retval.Description = v.WellnessOfferingModule.Description
	retval.Version = v.WellnessOfferingModule.Version
	{

		dst := &retval.Source
		src := v.WellnessOfferingModule.Source
		var err error
		*dst, err = __marshalWellnessOfferingModuleSourceMarketplaceModuleSource(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"Unable to marshal GetWellnessOfferingModuleMyModuleMarketplaceModule.WellnessOfferingModule.Source: %w", err)
		}
	}
	return &retval, nil
}

// GetWellnessOfferingModuleResponse is returned by GetWellnessOfferingModule on success.
type GetWellnessOfferingModuleResponse struct {
	MyModule GetWellnessOfferingModuleMyModuleMarketplaceModule `json:"myModule"`
}

// GetMyModule returns GetWellnessOfferingModuleResponse.MyModule, and is useful for accessing the field via an interface.
func (v *GetWellnessOfferingModuleResponse) GetMyModule() GetWellnessOfferingModuleMyModuleMarketplaceModule {
	return v.MyModule
}

type LicenseDetailsInput struct {
	Message string `json:"message"`
	Url     string `json:"url"`
}

// GetMessage returns LicenseDetailsInput.Message, and is useful for accessing the field via an interface.
func (v *LicenseDetailsInput) GetMessage() string { return v.Message }

// GetUrl returns LicenseDetailsInput.Url, and is useful for accessing the field via an interface.
func (v *LicenseDetailsInput) GetUrl() string { return v.Url }

type MarketplaceModuleScope string

const (
	MarketplaceModuleScopeLicensed     MarketplaceModuleScope = "LICENSED"
	MarketplaceModuleScopeOrganization MarketplaceModuleScope = "ORGANIZATION"
	MarketplaceModuleScopePublic       MarketplaceModuleScope = "PUBLIC"
)

type ModuleCategory string

const (
	ModuleCategoryAppTile             ModuleCategory = "APP_TILE"
	ModuleCategoryConsent             ModuleCategory = "CONSENT"
	ModuleCategoryDomainOntology      ModuleCategory = "DOMAIN_ONTOLOGY"
	ModuleCategoryInsightsLayout      ModuleCategory = "INSIGHTS_LAYOUT"
	ModuleCategoryNotebook            ModuleCategory = "NOTEBOOK"
	ModuleCategoryPatientViewerLayout ModuleCategory = "PATIENT_VIEWER_LAYOUT"
	ModuleCategoryProcessOntology     ModuleCategory = "PROCESS_ONTOLOGY"
	ModuleCategoryProgramEnrollment   ModuleCategory = "PROGRAM_ENROLLMENT"
	ModuleCategoryProgramTemplate     ModuleCategory = "PROGRAM_TEMPLATE"
	ModuleCategoryReportExtractor     ModuleCategory = "REPORT_EXTRACTOR"
	ModuleCategorySearchLayout        ModuleCategory = "SEARCH_LAYOUT"
	ModuleCategorySurvey              ModuleCategory = "SURVEY"
	ModuleCategoryWellnessOffering    ModuleCategory = "WELLNESS_OFFERING"
	ModuleCategoryWorkflow            ModuleCategory = "WORKFLOW"
)

type ModuleProduct string

const (
	ModuleProductLifeology         ModuleProduct = "LIFEOLOGY"
	ModuleProductLifeExtendApp     ModuleProduct = "LIFE_EXTEND_APP"
	ModuleProductLifeFastingApp    ModuleProduct = "LIFE_FASTING_APP"
	ModuleProductLifeMobileApps    ModuleProduct = "LIFE_MOBILE_APPS"
	ModuleProductOcr               ModuleProduct = "OCR"
	ModuleProductPhc               ModuleProduct = "PHC"
	ModuleProductPrecisionOutcomes ModuleProduct = "PRECISION_OUTCOMES"
	ModuleProductPrecisionWellness ModuleProduct = "PRECISION_WELLNESS"
	ModuleProductSkillspring       ModuleProduct = "SKILLSPRING"
)

type ModuleVersionInput struct {
	ChangeLog string `json:"changeLog"`
	Version   string `json:"version"`
}

// GetChangeLog returns ModuleVersionInput.ChangeLog, and is useful for accessing the field via an interface.
func (v *ModuleVersionInput) GetChangeLog() string { return v.ChangeLog }

// GetVersion returns ModuleVersionInput.Version, and is useful for accessing the field via an interface.
func (v *ModuleVersionInput) GetVersion() string { return v.Version }

type PaymentInterval string

const (
	PaymentIntervalFree    PaymentInterval = "FREE"
	PaymentIntervalMonthly PaymentInterval = "MONTHLY"
	PaymentIntervalOnce    PaymentInterval = "ONCE"
	PaymentIntervalYearly  PaymentInterval = "YEARLY"
)

type PriceRangeInput struct {
	High int `json:"high"`
	Low  int `json:"low"`
}

// GetHigh returns PriceRangeInput.High, and is useful for accessing the field via an interface.
func (v *PriceRangeInput) GetHigh() int { return v.High }

// GetLow returns PriceRangeInput.Low, and is useful for accessing the field via an interface.
func (v *PriceRangeInput) GetLow() int { return v.Low }

type PublicAppTileModuleSourceInfo struct {
	Id string `json:"id"`
}

// GetId returns PublicAppTileModuleSourceInfo.Id, and is useful for accessing the field via an interface.
func (v *PublicAppTileModuleSourceInfo) GetId() string { return v.Id }

type PublishDraftModuleInputV2 struct {
	IsTestModule bool               `json:"isTestModule"`
	ModuleId     string             `json:"moduleId"`
	ShowAuthor   bool               `json:"showAuthor"`
	Version      ModuleVersionInput `json:"version"`
}

// GetIsTestModule returns PublishDraftModuleInputV2.IsTestModule, and is useful for accessing the field via an interface.
func (v *PublishDraftModuleInputV2) GetIsTestModule() bool { return v.IsTestModule }

// GetModuleId returns PublishDraftModuleInputV2.ModuleId, and is useful for accessing the field via an interface.
func (v *PublishDraftModuleInputV2) GetModuleId() string { return v.ModuleId }

// GetShowAuthor returns PublishDraftModuleInputV2.ShowAuthor, and is useful for accessing the field via an interface.
func (v *PublishDraftModuleInputV2) GetShowAuthor() bool { return v.ShowAuthor }

// GetVersion returns PublishDraftModuleInputV2.Version, and is useful for accessing the field via an interface.
func (v *PublishDraftModuleInputV2) GetVersion() ModuleVersionInput { return v.Version }

type PublishDraftModuleInputV3 struct {
	IsTestModule bool               `json:"isTestModule"`
	ModuleId     string             `json:"moduleId"`
	ShowAuthor   bool               `json:"showAuthor"`
	Version      ModuleVersionInput `json:"version"`
}

// GetIsTestModule returns PublishDraftModuleInputV3.IsTestModule, and is useful for accessing the field via an interface.
func (v *PublishDraftModuleInputV3) GetIsTestModule() bool { return v.IsTestModule }

// GetModuleId returns PublishDraftModuleInputV3.ModuleId, and is useful for accessing the field via an interface.
func (v *PublishDraftModuleInputV3) GetModuleId() string { return v.ModuleId }

// GetShowAuthor returns PublishDraftModuleInputV3.ShowAuthor, and is useful for accessing the field via an interface.
func (v *PublishDraftModuleInputV3) GetShowAuthor() bool { return v.ShowAuthor }

// GetVersion returns PublishDraftModuleInputV3.Version, and is useful for accessing the field via an interface.
func (v *PublishDraftModuleInputV3) GetVersion() ModuleVersionInput { return v.Version }

// PublishModulePublishDraftModuleV2PublishDraftModuleResponseV2 includes the requested fields of the GraphQL type PublishDraftModuleResponseV2.
type PublishModulePublishDraftModuleV2PublishDraftModuleResponseV2 struct {
	Id      string                                                                                    `json:"id"`
	Version PublishModulePublishDraftModuleV2PublishDraftModuleResponseV2VersionModuleVersionResponse `json:"version"`
}

// GetId returns PublishModulePublishDraftModuleV2PublishDraftModuleResponseV2.Id, and is useful for accessing the field via an interface.
func (v *PublishModulePublishDraftModuleV2PublishDraftModuleResponseV2) GetId() string { return v.Id }

// GetVersion returns PublishModulePublishDraftModuleV2PublishDraftModuleResponseV2.Version, and is useful for accessing the field via an interface.
func (v *PublishModulePublishDraftModuleV2PublishDraftModuleResponseV2) GetVersion() PublishModulePublishDraftModuleV2PublishDraftModuleResponseV2VersionModuleVersionResponse {
	return v.Version
}

// PublishModulePublishDraftModuleV2PublishDraftModuleResponseV2VersionModuleVersionResponse includes the requested fields of the GraphQL type ModuleVersionResponse.
type PublishModulePublishDraftModuleV2PublishDraftModuleResponseV2VersionModuleVersionResponse struct {
	Version string `json:"version"`
}

// GetVersion returns PublishModulePublishDraftModuleV2PublishDraftModuleResponseV2VersionModuleVersionResponse.Version, and is useful for accessing the field via an interface.
func (v *PublishModulePublishDraftModuleV2PublishDraftModuleResponseV2VersionModuleVersionResponse) GetVersion() string {
	return v.Version
}

// PublishModuleResponse is returned by PublishModule on success.
type PublishModuleResponse struct {
	PublishDraftModuleV2 PublishModulePublishDraftModuleV2PublishDraftModuleResponseV2 `json:"publishDraftModuleV2"`
}

// GetPublishDraftModuleV2 returns PublishModuleResponse.PublishDraftModuleV2, and is useful for accessing the field via an interface.
func (v *PublishModuleResponse) GetPublishDraftModuleV2() PublishModulePublishDraftModuleV2PublishDraftModuleResponseV2 {
	return v.PublishDraftModuleV2
}

// PublishModuleV3PublishDraftModuleV3PublishDraftModuleResponseV3 includes the requested fields of the GraphQL type PublishDraftModuleResponseV3.
type PublishModuleV3PublishDraftModuleV3PublishDraftModuleResponseV3 struct {
	Id              string                                                                                      `json:"id"`
	PublishReviewId string                                                                                      `json:"publishReviewId"`
	Version         PublishModuleV3PublishDraftModuleV3PublishDraftModuleResponseV3VersionModuleVersionResponse `json:"version"`
}

// GetId returns PublishModuleV3PublishDraftModuleV3PublishDraftModuleResponseV3.Id, and is useful for accessing the field via an interface.
func (v *PublishModuleV3PublishDraftModuleV3PublishDraftModuleResponseV3) GetId() string { return v.Id }

// GetPublishReviewId returns PublishModuleV3PublishDraftModuleV3PublishDraftModuleResponseV3.PublishReviewId, and is useful for accessing the field via an interface.
func (v *PublishModuleV3PublishDraftModuleV3PublishDraftModuleResponseV3) GetPublishReviewId() string {
	return v.PublishReviewId
}

// GetVersion returns PublishModuleV3PublishDraftModuleV3PublishDraftModuleResponseV3.Version, and is useful for accessing the field via an interface.
func (v *PublishModuleV3PublishDraftModuleV3PublishDraftModuleResponseV3) GetVersion() PublishModuleV3PublishDraftModuleV3PublishDraftModuleResponseV3VersionModuleVersionResponse {
	return v.Version
}

// PublishModuleV3PublishDraftModuleV3PublishDraftModuleResponseV3VersionModuleVersionResponse includes the requested fields of the GraphQL type ModuleVersionResponse.
type PublishModuleV3PublishDraftModuleV3PublishDraftModuleResponseV3VersionModuleVersionResponse struct {
	Version string `json:"version"`
}

// GetVersion returns PublishModuleV3PublishDraftModuleV3PublishDraftModuleResponseV3VersionModuleVersionResponse.Version, and is useful for accessing the field via an interface.
func (v *PublishModuleV3PublishDraftModuleV3PublishDraftModuleResponseV3VersionModuleVersionResponse) GetVersion() string {
	return v.Version
}

// PublishModuleV3Response is returned by PublishModuleV3 on success.
type PublishModuleV3Response struct {
	// publish workflow which uses marketplace approval process
	PublishDraftModuleV3 PublishModuleV3PublishDraftModuleV3PublishDraftModuleResponseV3 `json:"publishDraftModuleV3"`
}

// GetPublishDraftModuleV3 returns PublishModuleV3Response.PublishDraftModuleV3, and is useful for accessing the field via an interface.
func (v *PublishModuleV3Response) GetPublishDraftModuleV3() PublishModuleV3PublishDraftModuleV3PublishDraftModuleResponseV3 {
	return v.PublishDraftModuleV3
}

// SetAppTileResponse is returned by SetAppTile on success.
type SetAppTileResponse struct {
	SetPublicAppTileDraftModuleSource SetAppTileSetPublicAppTileDraftModuleSourceSetAppTileDraftModuleSourceResponse `json:"setPublicAppTileDraftModuleSource"`
}

// GetSetPublicAppTileDraftModuleSource returns SetAppTileResponse.SetPublicAppTileDraftModuleSource, and is useful for accessing the field via an interface.
func (v *SetAppTileResponse) GetSetPublicAppTileDraftModuleSource() SetAppTileSetPublicAppTileDraftModuleSourceSetAppTileDraftModuleSourceResponse {
	return v.SetPublicAppTileDraftModuleSource
}

// SetAppTileSetPublicAppTileDraftModuleSourceSetAppTileDraftModuleSourceResponse includes the requested fields of the GraphQL type SetAppTileDraftModuleSourceResponse.
type SetAppTileSetPublicAppTileDraftModuleSourceSetAppTileDraftModuleSourceResponse struct {
	ModuleId string `json:"moduleId"`
}

// GetModuleId returns SetAppTileSetPublicAppTileDraftModuleSourceSetAppTileDraftModuleSourceResponse.ModuleId, and is useful for accessing the field via an interface.
func (v *SetAppTileSetPublicAppTileDraftModuleSourceSetAppTileDraftModuleSourceResponse) GetModuleId() string {
	return v.ModuleId
}

type SetDraftModuleWellnessOfferingSourceInput struct {
	ModuleId   string                           `json:"moduleId"`
	SourceInfo WellnessOfferingModuleSourceInfo `json:"sourceInfo"`
}

// GetModuleId returns SetDraftModuleWellnessOfferingSourceInput.ModuleId, and is useful for accessing the field via an interface.
func (v *SetDraftModuleWellnessOfferingSourceInput) GetModuleId() string { return v.ModuleId }

// GetSourceInfo returns SetDraftModuleWellnessOfferingSourceInput.SourceInfo, and is useful for accessing the field via an interface.
func (v *SetDraftModuleWellnessOfferingSourceInput) GetSourceInfo() WellnessOfferingModuleSourceInfo {
	return v.SourceInfo
}

type SetPublicAppTileDraftModuleSourceInput struct {
	ModuleId   string                        `json:"moduleId"`
	SourceInfo PublicAppTileModuleSourceInfo `json:"sourceInfo"`
}

// GetModuleId returns SetPublicAppTileDraftModuleSourceInput.ModuleId, and is useful for accessing the field via an interface.
func (v *SetPublicAppTileDraftModuleSourceInput) GetModuleId() string { return v.ModuleId }

// GetSourceInfo returns SetPublicAppTileDraftModuleSourceInput.SourceInfo, and is useful for accessing the field via an interface.
func (v *SetPublicAppTileDraftModuleSourceInput) GetSourceInfo() PublicAppTileModuleSourceInfo {
	return v.SourceInfo
}

// SetWellnessOfferingDraftModuleSourceResponse is returned by SetWellnessOfferingDraftModuleSource on success.
type SetWellnessOfferingDraftModuleSourceResponse struct {
	SetWellnessOfferingDraftModuleSource SetWellnessOfferingDraftModuleSourceSetWellnessOfferingDraftModuleSourceSetDraftModuleWellnessOfferingSourceResponse `json:"setWellnessOfferingDraftModuleSource"`
}

// GetSetWellnessOfferingDraftModuleSource returns SetWellnessOfferingDraftModuleSourceResponse.SetWellnessOfferingDraftModuleSource, and is useful for accessing the field via an interface.
func (v *SetWellnessOfferingDraftModuleSourceResponse) GetSetWellnessOfferingDraftModuleSource() SetWellnessOfferingDraftModuleSourceSetWellnessOfferingDraftModuleSourceSetDraftModuleWellnessOfferingSourceResponse {
	return v.SetWellnessOfferingDraftModuleSource
}

// SetWellnessOfferingDraftModuleSourceSetWellnessOfferingDraftModuleSourceSetDraftModuleWellnessOfferingSourceResponse includes the requested fields of the GraphQL type SetDraftModuleWellnessOfferingSourceResponse.
type SetWellnessOfferingDraftModuleSourceSetWellnessOfferingDraftModuleSourceSetDraftModuleWellnessOfferingSourceResponse struct {
	Id string `json:"id"`
}

// GetId returns SetWellnessOfferingDraftModuleSourceSetWellnessOfferingDraftModuleSourceSetDraftModuleWellnessOfferingSourceResponse.Id, and is useful for accessing the field via an interface.
func (v *SetWellnessOfferingDraftModuleSourceSetWellnessOfferingDraftModuleSourceSetDraftModuleWellnessOfferingSourceResponse) GetId() string {
	return v.Id
}

// StartImageUploadResponse is returned by StartImageUpload on success.
type StartImageUploadResponse struct {
	StartUpload StartImageUploadStartUploadStartUploadResponse `json:"startUpload"`
}

// GetStartUpload returns StartImageUploadResponse.StartUpload, and is useful for accessing the field via an interface.
func (v *StartImageUploadResponse) GetStartUpload() StartImageUploadStartUploadStartUploadResponse {
	return v.StartUpload
}

// StartImageUploadStartUploadStartUploadResponse includes the requested fields of the GraphQL type StartUploadResponse.
type StartImageUploadStartUploadStartUploadResponse struct {
	Id     string            `json:"id"`
	Url    string            `json:"url"`
	Fields map[string]string `json:"fields"`
}

// GetId returns StartImageUploadStartUploadStartUploadResponse.Id, and is useful for accessing the field via an interface.
func (v *StartImageUploadStartUploadStartUploadResponse) GetId() string { return v.Id }

// GetUrl returns StartImageUploadStartUploadStartUploadResponse.Url, and is useful for accessing the field via an interface.
func (v *StartImageUploadStartUploadStartUploadResponse) GetUrl() string { return v.Url }

// GetFields returns StartImageUploadStartUploadStartUploadResponse.Fields, and is useful for accessing the field via an interface.
func (v *StartImageUploadStartUploadStartUploadResponse) GetFields() map[string]string {
	return v.Fields
}

type StartUploadInput struct {
	FileName string `json:"fileName"`
}

// GetFileName returns StartUploadInput.FileName, and is useful for accessing the field via an interface.
func (v *StartUploadInput) GetFileName() string { return v.FileName }

type SubsidyType string

const (
	SubsidyTypeLifeLeagueParent  SubsidyType = "LIFE_LEAGUE_PARENT"
	SubsidyTypeLifeLeaguePartner SubsidyType = "LIFE_LEAGUE_PARTNER"
	SubsidyTypeRedemption        SubsidyType = "REDEMPTION"
	SubsidyTypeService           SubsidyType = "SERVICE"
)

type UpdateDraftModuleInput struct {
	Description      string                  `json:"description,omitempty"`
	Icon             any                     `json:"icon,omitempty"`
	Languages        []string                `json:"languages,omitempty"`
	ModuleId         string                  `json:"moduleId"`
	ParentModuleId   string                  `json:"parentModuleId,omitempty"`
	PreviewImages    []FileWithDescription   `json:"previewImages,omitempty"`
	PreviewVideoUrls []string                `json:"previewVideoUrls,omitempty"`
	Prices           []DraftModulePriceInput `json:"prices,omitempty"`
	Products         []ModuleProduct         `json:"products,omitempty"`
	Support          string                  `json:"support"`
	Tags             []string                `json:"tags,omitempty"`
	Title            string                  `json:"title,omitempty"`
	WebsiteUrl       string                  `json:"websiteUrl,omitempty"`
}

// GetDescription returns UpdateDraftModuleInput.Description, and is useful for accessing the field via an interface.
func (v *UpdateDraftModuleInput) GetDescription() string { return v.Description }

// GetIcon returns UpdateDraftModuleInput.Icon, and is useful for accessing the field via an interface.
func (v *UpdateDraftModuleInput) GetIcon() any { return v.Icon }

// GetLanguages returns UpdateDraftModuleInput.Languages, and is useful for accessing the field via an interface.
func (v *UpdateDraftModuleInput) GetLanguages() []string { return v.Languages }

// GetModuleId returns UpdateDraftModuleInput.ModuleId, and is useful for accessing the field via an interface.
func (v *UpdateDraftModuleInput) GetModuleId() string { return v.ModuleId }

// GetParentModuleId returns UpdateDraftModuleInput.ParentModuleId, and is useful for accessing the field via an interface.
func (v *UpdateDraftModuleInput) GetParentModuleId() string { return v.ParentModuleId }

// GetPreviewImages returns UpdateDraftModuleInput.PreviewImages, and is useful for accessing the field via an interface.
func (v *UpdateDraftModuleInput) GetPreviewImages() []FileWithDescription { return v.PreviewImages }

// GetPreviewVideoUrls returns UpdateDraftModuleInput.PreviewVideoUrls, and is useful for accessing the field via an interface.
func (v *UpdateDraftModuleInput) GetPreviewVideoUrls() []string { return v.PreviewVideoUrls }

// GetPrices returns UpdateDraftModuleInput.Prices, and is useful for accessing the field via an interface.
func (v *UpdateDraftModuleInput) GetPrices() []DraftModulePriceInput { return v.Prices }

// GetProducts returns UpdateDraftModuleInput.Products, and is useful for accessing the field via an interface.
func (v *UpdateDraftModuleInput) GetProducts() []ModuleProduct { return v.Products }

// GetSupport returns UpdateDraftModuleInput.Support, and is useful for accessing the field via an interface.
func (v *UpdateDraftModuleInput) GetSupport() string { return v.Support }

// GetTags returns UpdateDraftModuleInput.Tags, and is useful for accessing the field via an interface.
func (v *UpdateDraftModuleInput) GetTags() []string { return v.Tags }

// GetTitle returns UpdateDraftModuleInput.Title, and is useful for accessing the field via an interface.
func (v *UpdateDraftModuleInput) GetTitle() string { return v.Title }

// GetWebsiteUrl returns UpdateDraftModuleInput.WebsiteUrl, and is useful for accessing the field via an interface.
func (v *UpdateDraftModuleInput) GetWebsiteUrl() string { return v.WebsiteUrl }

// UpdateDraftModuleResponse is returned by UpdateDraftModule on success.
type UpdateDraftModuleResponse struct {
	UpdateDraftModule UpdateDraftModuleUpdateDraftModuleUpdateDraftModuleResponse `json:"updateDraftModule"`
}

// GetUpdateDraftModule returns UpdateDraftModuleResponse.UpdateDraftModule, and is useful for accessing the field via an interface.
func (v *UpdateDraftModuleResponse) GetUpdateDraftModule() UpdateDraftModuleUpdateDraftModuleUpdateDraftModuleResponse {
	return v.UpdateDraftModule
}

// UpdateDraftModuleUpdateDraftModuleUpdateDraftModuleResponse includes the requested fields of the GraphQL type UpdateDraftModuleResponse.
type UpdateDraftModuleUpdateDraftModuleUpdateDraftModuleResponse struct {
	Id string `json:"id"`
}

// GetId returns UpdateDraftModuleUpdateDraftModuleUpdateDraftModuleResponse.Id, and is useful for accessing the field via an interface.
func (v *UpdateDraftModuleUpdateDraftModuleUpdateDraftModuleResponse) GetId() string { return v.Id }

type UploadType string

const (
	UploadTypeIcon         UploadType = "ICON"
	UploadTypePreviewImage UploadType = "PREVIEW_IMAGE"
)

// WellnessOfferingModule includes the GraphQL fields of MarketplaceModule requested by the fragment WellnessOfferingModule.
type WellnessOfferingModule struct {
	Id          string                                              `json:"id"`
	Title       string                                              `json:"title"`
	Description string                                              `json:"description"`
	Version     string                                              `json:"version"`
	Source      WellnessOfferingModuleSourceMarketplaceModuleSource `json:"-"`
}

// GetId returns WellnessOfferingModule.Id, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModule) GetId() string { return v.Id }

// GetTitle returns WellnessOfferingModule.Title, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModule) GetTitle() string { return v.Title }

// GetDescription returns WellnessOfferingModule.Description, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModule) GetDescription() string { return v.Description }

// GetVersion returns WellnessOfferingModule.Version, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModule) GetVersion() string { return v.Version }

// GetSource returns WellnessOfferingModule.Source, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModule) GetSource() WellnessOfferingModuleSourceMarketplaceModuleSource {
	return v.Source
}

func (v *WellnessOfferingModule) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*WellnessOfferingModule
		Source json.RawMessage `json:"source"`
		graphql.NoUnmarshalJSON
	}
	firstPass.WellnessOfferingModule = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Source
		src := firstPass.Source
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalWellnessOfferingModuleSourceMarketplaceModuleSource(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"Unable to unmarshal WellnessOfferingModule.Source: %w", err)
			}
		}
	}
	return nil
}

type __premarshalWellnessOfferingModule struct {
	Id string `json:"id"`

	Title string `json:"title"`

	Description string `json:"description"`

	Version string `json:"version"`

	Source json.RawMessage `json:"source"`
}

func (v *WellnessOfferingModule) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *WellnessOfferingModule) __premarshalJSON() (*__premarshalWellnessOfferingModule, error) {
	var retval __premarshalWellnessOfferingModule

	retval.Id = v.Id
	retval.Title = v.Title
	retval.Description = v.Description
	retval.Version = v.Version
	{

		dst := &retval.Source
		src := v.Source
		var err error
		*dst, err = __marshalWellnessOfferingModuleSourceMarketplaceModuleSource(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"Unable to marshal WellnessOfferingModule.Source: %w", err)
		}
	}
	return &retval, nil
}

// WellnessOfferingModuleSourceAppTile includes the requested fields of the GraphQL type AppTile.
type WellnessOfferingModuleSourceAppTile struct {
	Typename string `json:"__typename"`
}

// GetTypename returns WellnessOfferingModuleSourceAppTile.Typename, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceAppTile) GetTypename() string { return v.Typename }

// WellnessOfferingModuleSourceConsent includes the requested fields of the GraphQL type Consent.
type WellnessOfferingModuleSourceConsent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns WellnessOfferingModuleSourceConsent.Typename, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceConsent) GetTypename() string { return v.Typename }

// WellnessOfferingModuleSourceDomainOntology includes the requested fields of the GraphQL type DomainOntology.
type WellnessOfferingModuleSourceDomainOntology struct {
	Typename string `json:"__typename"`
}

// GetTypename returns WellnessOfferingModuleSourceDomainOntology.Typename, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceDomainOntology) GetTypename() string { return v.Typename }

type WellnessOfferingModuleSourceInfo struct {
	// The link to open details about the subsidy for the participant
	AppLink string `json:"appLink"`
	// The approximate per-redemption cost of the offering in pennies.
	ApproximateUnitCost int `json:"approximateUnitCost"`
	// The configuration schema for this offering, as a JSON blob.
	ConfigurationSchema string `json:"configurationSchema"`
	// A URL for an icon representing the offering
	IconUrl string `json:"iconUrl"`
	// A URL of a marketing image for the offering.
	ImageUrl string `json:"imageUrl"`
	// A link to more information about the offering.
	InfoUrl string `json:"infoUrl"`
	// A URL to send install events to. This should be the url of a service that manages
	// the offering, and can be an Alpha-compatible internal lambda url (e.g. lambda://ulta-service:deployed).
	InstallUrl string `json:"installUrl"`
	// A low and high value for the offering in integer USD pennies
	PriceRange PriceRangeInput `json:"priceRange"`
	// The name of the provider of this offering.
	Provider string `json:"provider"`
	// The type of subsidy, defaults to SERVICE
	SubsidyType SubsidyType `json:"subsidyType"`
}

// GetAppLink returns WellnessOfferingModuleSourceInfo.AppLink, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceInfo) GetAppLink() string { return v.AppLink }

// GetApproximateUnitCost returns WellnessOfferingModuleSourceInfo.ApproximateUnitCost, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceInfo) GetApproximateUnitCost() int { return v.ApproximateUnitCost }

// GetConfigurationSchema returns WellnessOfferingModuleSourceInfo.ConfigurationSchema, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceInfo) GetConfigurationSchema() string {
	return v.ConfigurationSchema
}

// GetIconUrl returns WellnessOfferingModuleSourceInfo.IconUrl, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceInfo) GetIconUrl() string { return v.IconUrl }

// GetImageUrl returns WellnessOfferingModuleSourceInfo.ImageUrl, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceInfo) GetImageUrl() string { return v.ImageUrl }

// GetInfoUrl returns WellnessOfferingModuleSourceInfo.InfoUrl, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceInfo) GetInfoUrl() string { return v.InfoUrl }

// GetInstallUrl returns WellnessOfferingModuleSourceInfo.InstallUrl, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceInfo) GetInstallUrl() string { return v.InstallUrl }

// GetPriceRange returns WellnessOfferingModuleSourceInfo.PriceRange, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceInfo) GetPriceRange() PriceRangeInput { return v.PriceRange }

// GetProvider returns WellnessOfferingModuleSourceInfo.Provider, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceInfo) GetProvider() string { return v.Provider }

// GetSubsidyType returns WellnessOfferingModuleSourceInfo.SubsidyType, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceInfo) GetSubsidyType() SubsidyType { return v.SubsidyType }

// WellnessOfferingModuleSourceInsightsLayout includes the requested fields of the GraphQL type InsightsLayout.
type WellnessOfferingModuleSourceInsightsLayout struct {
	Typename string `json:"__typename"`
}

// GetTypename returns WellnessOfferingModuleSourceInsightsLayout.Typename, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceInsightsLayout) GetTypename() string { return v.Typename }

// WellnessOfferingModuleSourceMarketplaceModuleSource includes the requested fields of the GraphQL interface MarketplaceModuleSource.
//
// WellnessOfferingModuleSourceMarketplaceModuleSource is implemented by the following types:
// WellnessOfferingModuleSourceAppTile
// WellnessOfferingModuleSourceConsent
// WellnessOfferingModuleSourceDomainOntology
// WellnessOfferingModuleSourceInsightsLayout
// WellnessOfferingModuleSourceNotebook
// WellnessOfferingModuleSourceOcrReportExtractor
// WellnessOfferingModuleSourcePatientLayout
// WellnessOfferingModuleSourceProcessOntology
// WellnessOfferingModuleSourceProgramEnrollment
// WellnessOfferingModuleSourceProgramTemplate
// WellnessOfferingModuleSourceSearchLayout
// WellnessOfferingModuleSourceSurvey
// WellnessOfferingModuleSourceWellnessOffering
// WellnessOfferingModuleSourceWorkflow
type WellnessOfferingModuleSourceMarketplaceModuleSource interface {
	implementsGraphQLInterfaceWellnessOfferingModuleSourceMarketplaceModuleSource()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *WellnessOfferingModuleSourceAppTile) implementsGraphQLInterfaceWellnessOfferingModuleSourceMarketplaceModuleSource() {
}
func (v *WellnessOfferingModuleSourceConsent) implementsGraphQLInterfaceWellnessOfferingModuleSourceMarketplaceModuleSource() {
}
func (v *WellnessOfferingModuleSourceDomainOntology) implementsGraphQLInterfaceWellnessOfferingModuleSourceMarketplaceModuleSource() {
}
func (v *WellnessOfferingModuleSourceInsightsLayout) implementsGraphQLInterfaceWellnessOfferingModuleSourceMarketplaceModuleSource() {
}
func (v *WellnessOfferingModuleSourceNotebook) implementsGraphQLInterfaceWellnessOfferingModuleSourceMarketplaceModuleSource() {
}
func (v *WellnessOfferingModuleSourceOcrReportExtractor) implementsGraphQLInterfaceWellnessOfferingModuleSourceMarketplaceModuleSource() {
}
func (v *WellnessOfferingModuleSourcePatientLayout) implementsGraphQLInterfaceWellnessOfferingModuleSourceMarketplaceModuleSource() {
}
func (v *WellnessOfferingModuleSourceProcessOntology) implementsGraphQLInterfaceWellnessOfferingModuleSourceMarketplaceModuleSource() {
}
func (v *WellnessOfferingModuleSourceProgramEnrollment) implementsGraphQLInterfaceWellnessOfferingModuleSourceMarketplaceModuleSource() {
}
func (v *WellnessOfferingModuleSourceProgramTemplate) implementsGraphQLInterfaceWellnessOfferingModuleSourceMarketplaceModuleSource() {
}
func (v *WellnessOfferingModuleSourceSearchLayout) implementsGraphQLInterfaceWellnessOfferingModuleSourceMarketplaceModuleSource() {
}
func (v *WellnessOfferingModuleSourceSurvey) implementsGraphQLInterfaceWellnessOfferingModuleSourceMarketplaceModuleSource() {
}
func (v *WellnessOfferingModuleSourceWellnessOffering) implementsGraphQLInterfaceWellnessOfferingModuleSourceMarketplaceModuleSource() {
}
func (v *WellnessOfferingModuleSourceWorkflow) implementsGraphQLInterfaceWellnessOfferingModuleSourceMarketplaceModuleSource() {
}

func __unmarshalWellnessOfferingModuleSourceMarketplaceModuleSource(b []byte, v *WellnessOfferingModuleSourceMarketplaceModuleSource) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "AppTile":
		*v = new(WellnessOfferingModuleSourceAppTile)
		return json.Unmarshal(b, *v)
	case "Consent":
		*v = new(WellnessOfferingModuleSourceConsent)
		return json.Unmarshal(b, *v)
	case "DomainOntology":
		*v = new(WellnessOfferingModuleSourceDomainOntology)
		return json.Unmarshal(b, *v)
	case "InsightsLayout":
		*v = new(WellnessOfferingModuleSourceInsightsLayout)
		return json.Unmarshal(b, *v)
	case "Notebook":
		*v = new(WellnessOfferingModuleSourceNotebook)
		return json.Unmarshal(b, *v)
	case "OcrReportExtractor":
		*v = new(WellnessOfferingModuleSourceOcrReportExtractor)
		return json.Unmarshal(b, *v)
	case "PatientLayout":
		*v = new(WellnessOfferingModuleSourcePatientLayout)
		return json.Unmarshal(b, *v)
	case "ProcessOntology":
		*v = new(WellnessOfferingModuleSourceProcessOntology)
		return json.Unmarshal(b, *v)
	case "ProgramEnrollment":
		*v = new(WellnessOfferingModuleSourceProgramEnrollment)
		return json.Unmarshal(b, *v)
	case "ProgramTemplate":
		*v = new(WellnessOfferingModuleSourceProgramTemplate)
		return json.Unmarshal(b, *v)
	case "SearchLayout":
		*v = new(WellnessOfferingModuleSourceSearchLayout)
		return json.Unmarshal(b, *v)
	case "Survey":
		*v = new(WellnessOfferingModuleSourceSurvey)
		return json.Unmarshal(b, *v)
	case "WellnessOffering":
		*v = new(WellnessOfferingModuleSourceWellnessOffering)
		return json.Unmarshal(b, *v)
	case "Workflow":
		*v = new(WellnessOfferingModuleSourceWorkflow)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing MarketplaceModuleSource.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for WellnessOfferingModuleSourceMarketplaceModuleSource: "%v"`, tn.TypeName)
	}
}

func __marshalWellnessOfferingModuleSourceMarketplaceModuleSource(v *WellnessOfferingModuleSourceMarketplaceModuleSource) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *WellnessOfferingModuleSourceAppTile:
		typename = "AppTile"

		result := struct {
			TypeName string `json:"__typename"`
			*WellnessOfferingModuleSourceAppTile
		}{typename, v}
		return json.Marshal(result)
	case *WellnessOfferingModuleSourceConsent:
		typename = "Consent"

		result := struct {
			TypeName string `json:"__typename"`
			*WellnessOfferingModuleSourceConsent
		}{typename, v}
		return json.Marshal(result)
	case *WellnessOfferingModuleSourceDomainOntology:
		typename = "DomainOntology"

		result := struct {
			TypeName string `json:"__typename"`
			*WellnessOfferingModuleSourceDomainOntology
		}{typename, v}
		return json.Marshal(result)
	case *WellnessOfferingModuleSourceInsightsLayout:
		typename = "InsightsLayout"

		result := struct {
			TypeName string `json:"__typename"`
			*WellnessOfferingModuleSourceInsightsLayout
		}{typename, v}
		return json.Marshal(result)
	case *WellnessOfferingModuleSourceNotebook:
		typename = "Notebook"

		result := struct {
			TypeName string `json:"__typename"`
			*WellnessOfferingModuleSourceNotebook
		}{typename, v}
		return json.Marshal(result)
	case *WellnessOfferingModuleSourceOcrReportExtractor:
		typename = "OcrReportExtractor"

		result := struct {
			TypeName string `json:"__typename"`
			*WellnessOfferingModuleSourceOcrReportExtractor
		}{typename, v}
		return json.Marshal(result)
	case *WellnessOfferingModuleSourcePatientLayout:
		typename = "PatientLayout"

		result := struct {
			TypeName string `json:"__typename"`
			*WellnessOfferingModuleSourcePatientLayout
		}{typename, v}
		return json.Marshal(result)
	case *WellnessOfferingModuleSourceProcessOntology:
		typename = "ProcessOntology"

		result := struct {
			TypeName string `json:"__typename"`
			*WellnessOfferingModuleSourceProcessOntology
		}{typename, v}
		return json.Marshal(result)
	case *WellnessOfferingModuleSourceProgramEnrollment:
		typename = "ProgramEnrollment"

		result := struct {
			TypeName string `json:"__typename"`
			*WellnessOfferingModuleSourceProgramEnrollment
		}{typename, v}
		return json.Marshal(result)
	case *WellnessOfferingModuleSourceProgramTemplate:
		typename = "ProgramTemplate"

		result := struct {
			TypeName string `json:"__typename"`
			*WellnessOfferingModuleSourceProgramTemplate
		}{typename, v}
		return json.Marshal(result)
	case *WellnessOfferingModuleSourceSearchLayout:
		typename = "SearchLayout"

		result := struct {
			TypeName string `json:"__typename"`
			*WellnessOfferingModuleSourceSearchLayout
		}{typename, v}
		return json.Marshal(result)
	case *WellnessOfferingModuleSourceSurvey:
		typename = "Survey"

		result := struct {
			TypeName string `json:"__typename"`
			*WellnessOfferingModuleSourceSurvey
		}{typename, v}
		return json.Marshal(result)
	case *WellnessOfferingModuleSourceWellnessOffering:
		typename = "WellnessOffering"

		premarshaled, err := v.__premarshalJSON()
		if err != nil {
			return nil, err
		}
		result := struct {
			TypeName string `json:"__typename"`
			*__premarshalWellnessOfferingModuleSourceWellnessOffering
		}{typename, premarshaled}
		return json.Marshal(result)
	case *WellnessOfferingModuleSourceWorkflow:
		typename = "Workflow"

		result := struct {
			TypeName string `json:"__typename"`
			*WellnessOfferingModuleSourceWorkflow
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for WellnessOfferingModuleSourceMarketplaceModuleSource: "%T"`, v)
	}
}

// WellnessOfferingModuleSourceNotebook includes the requested fields of the GraphQL type Notebook.
type WellnessOfferingModuleSourceNotebook struct {
	Typename string `json:"__typename"`
}

// GetTypename returns WellnessOfferingModuleSourceNotebook.Typename, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceNotebook) GetTypename() string { return v.Typename }

// WellnessOfferingModuleSourceOcrReportExtractor includes the requested fields of the GraphQL type OcrReportExtractor.
type WellnessOfferingModuleSourceOcrReportExtractor struct {
	Typename string `json:"__typename"`
}

// GetTypename returns WellnessOfferingModuleSourceOcrReportExtractor.Typename, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceOcrReportExtractor) GetTypename() string { return v.Typename }

// WellnessOfferingModuleSourcePatientLayout includes the requested fields of the GraphQL type PatientLayout.
type WellnessOfferingModuleSourcePatientLayout struct {
	Typename string `json:"__typename"`
}

// GetTypename returns WellnessOfferingModuleSourcePatientLayout.Typename, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourcePatientLayout) GetTypename() string { return v.Typename }

// WellnessOfferingModuleSourceProcessOntology includes the requested fields of the GraphQL type ProcessOntology.
type WellnessOfferingModuleSourceProcessOntology struct {
	Typename string `json:"__typename"`
}

// GetTypename returns WellnessOfferingModuleSourceProcessOntology.Typename, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceProcessOntology) GetTypename() string { return v.Typename }

// WellnessOfferingModuleSourceProgramEnrollment includes the requested fields of the GraphQL type ProgramEnrollment.
type WellnessOfferingModuleSourceProgramEnrollment struct {
	Typename string `json:"__typename"`
}

// GetTypename returns WellnessOfferingModuleSourceProgramEnrollment.Typename, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceProgramEnrollment) GetTypename() string { return v.Typename }

// WellnessOfferingModuleSourceProgramTemplate includes the requested fields of the GraphQL type ProgramTemplate.
type WellnessOfferingModuleSourceProgramTemplate struct {
	Typename string `json:"__typename"`
}

// GetTypename returns WellnessOfferingModuleSourceProgramTemplate.Typename, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceProgramTemplate) GetTypename() string { return v.Typename }

// WellnessOfferingModuleSourceSearchLayout includes the requested fields of the GraphQL type SearchLayout.
type WellnessOfferingModuleSourceSearchLayout struct {
	Typename string `json:"__typename"`
}

// GetTypename returns WellnessOfferingModuleSourceSearchLayout.Typename, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceSearchLayout) GetTypename() string { return v.Typename }

// WellnessOfferingModuleSourceSurvey includes the requested fields of the GraphQL type Survey.
type WellnessOfferingModuleSourceSurvey struct {
	Typename string `json:"__typename"`
}

// GetTypename returns WellnessOfferingModuleSourceSurvey.Typename, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceSurvey) GetTypename() string { return v.Typename }

// WellnessOfferingModuleSourceWellnessOffering includes the requested fields of the GraphQL type WellnessOffering.
type WellnessOfferingModuleSourceWellnessOffering struct {
	Typename               string `json:"__typename"`
	WellnessOfferingSource `json:"-"`
}

// GetTypename returns WellnessOfferingModuleSourceWellnessOffering.Typename, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceWellnessOffering) GetTypename() string { return v.Typename }

// GetId returns WellnessOfferingModuleSourceWellnessOffering.Id, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceWellnessOffering) GetId() string {
	return v.WellnessOfferingSource.Id
}

// GetProvider returns WellnessOfferingModuleSourceWellnessOffering.Provider, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceWellnessOffering) GetProvider() string {
	return v.WellnessOfferingSource.Provider
}

// GetImageUrl returns WellnessOfferingModuleSourceWellnessOffering.ImageUrl, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceWellnessOffering) GetImageUrl() string {
	return v.WellnessOfferingSource.ImageUrl
}

// GetInfoUrl returns WellnessOfferingModuleSourceWellnessOffering.InfoUrl, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceWellnessOffering) GetInfoUrl() string {
	return v.WellnessOfferingSource.InfoUrl
}

// GetConfigurationSchema returns WellnessOfferingModuleSourceWellnessOffering.ConfigurationSchema, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceWellnessOffering) GetConfigurationSchema() string {
	return v.WellnessOfferingSource.ConfigurationSchema
}

// GetApproximateUnitCost returns WellnessOfferingModuleSourceWellnessOffering.ApproximateUnitCost, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceWellnessOffering) GetApproximateUnitCost() int {
	return v.WellnessOfferingSource.ApproximateUnitCost
}

// GetSubsidyType returns WellnessOfferingModuleSourceWellnessOffering.SubsidyType, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceWellnessOffering) GetSubsidyType() SubsidyType {
	return v.WellnessOfferingSource.SubsidyType
}

// GetAppLink returns WellnessOfferingModuleSourceWellnessOffering.AppLink, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceWellnessOffering) GetAppLink() string {
	return v.WellnessOfferingSource.AppLink
}

// GetIconUrl returns WellnessOfferingModuleSourceWellnessOffering.IconUrl, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceWellnessOffering) GetIconUrl() string {
	return v.WellnessOfferingSource.IconUrl
}

// GetPriceRange returns WellnessOfferingModuleSourceWellnessOffering.PriceRange, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceWellnessOffering) GetPriceRange() WellnessOfferingSourcePriceRange {
	return v.WellnessOfferingSource.PriceRange
}

func (v *WellnessOfferingModuleSourceWellnessOffering) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*WellnessOfferingModuleSourceWellnessOffering
		graphql.NoUnmarshalJSON
	}
	firstPass.WellnessOfferingModuleSourceWellnessOffering = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.WellnessOfferingSource)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalWellnessOfferingModuleSourceWellnessOffering struct {
	Typename string `json:"__typename"`

	Id string `json:"id"`

	Provider string `json:"provider"`

	ImageUrl string `json:"imageUrl"`

	InfoUrl string `json:"infoUrl"`

	ConfigurationSchema string `json:"configurationSchema"`

	ApproximateUnitCost int `json:"approximateUnitCost"`

	SubsidyType SubsidyType `json:"subsidyType"`

	AppLink string `json:"appLink"`

	IconUrl string `json:"iconUrl"`

	PriceRange WellnessOfferingSourcePriceRange `json:"priceRange"`
}

func (v *WellnessOfferingModuleSourceWellnessOffering) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *WellnessOfferingModuleSourceWellnessOffering) __premarshalJSON() (*__premarshalWellnessOfferingModuleSourceWellnessOffering, error) {
	var retval __premarshalWellnessOfferingModuleSourceWellnessOffering

	retval.Typename = v.Typename
	retval.Id = v.WellnessOfferingSource.Id
	retval.Provider = v.WellnessOfferingSource.Provider
	retval.ImageUrl = v.WellnessOfferingSource.ImageUrl
	retval.InfoUrl = v.WellnessOfferingSource.InfoUrl
	retval.ConfigurationSchema = v.WellnessOfferingSource.ConfigurationSchema
	retval.ApproximateUnitCost = v.WellnessOfferingSource.ApproximateUnitCost
	retval.SubsidyType = v.WellnessOfferingSource.SubsidyType
	retval.AppLink = v.WellnessOfferingSource.AppLink
	retval.IconUrl = v.WellnessOfferingSource.IconUrl
	retval.PriceRange = v.WellnessOfferingSource.PriceRange
	return &retval, nil
}

// WellnessOfferingModuleSourceWorkflow includes the requested fields of the GraphQL type Workflow.
type WellnessOfferingModuleSourceWorkflow struct {
	Typename string `json:"__typename"`
}

// GetTypename returns WellnessOfferingModuleSourceWorkflow.Typename, and is useful for accessing the field via an interface.
func (v *WellnessOfferingModuleSourceWorkflow) GetTypename() string { return v.Typename }

// WellnessOfferingSource includes the GraphQL fields of WellnessOffering requested by the fragment WellnessOfferingSource.
type WellnessOfferingSource struct {
	Id string `json:"id"`
	// The name of the provider of this offering.
	Provider string `json:"provider"`
	// A URL of a marketing image for the offering.
	ImageUrl string `json:"imageUrl"`
	// A link to more information about the offering.
	InfoUrl string `json:"infoUrl"`
	// The configuration schema for this offering, as a JSON blob.
	ConfigurationSchema string `json:"configurationSchema"`
	// The approximate per-redemption cost of the offering in pennies.
	ApproximateUnitCost int `json:"approximateUnitCost"`
	// The type of subsidy, defaults to SERVICE
	SubsidyType SubsidyType `json:"subsidyType"`
	// The link to open details about the subsidy for the participant
	AppLink string `json:"appLink"`
	// A URL for an icon representing the offering
	IconUrl string `json:"iconUrl"`
	// A low and high value for the offering in integer USD pennies
	PriceRange WellnessOfferingSourcePriceRange `json:"priceRange"`
}

// GetId returns WellnessOfferingSource.Id, and is useful for accessing the field via an interface.
func (v *WellnessOfferingSource) GetId() string { return v.Id }

// GetProvider returns WellnessOfferingSource.Provider, and is useful for accessing the field via an interface.
func (v *WellnessOfferingSource) GetProvider() string { return v.Provider }

// GetImageUrl returns WellnessOfferingSource.ImageUrl, and is useful for accessing the field via an interface.
func (v *WellnessOfferingSource) GetImageUrl() string { return v.ImageUrl }

// GetInfoUrl returns WellnessOfferingSource.InfoUrl, and is useful for accessing the field via an interface.
func (v *WellnessOfferingSource) GetInfoUrl() string { return v.InfoUrl }

// GetConfigurationSchema returns WellnessOfferingSource.ConfigurationSchema, and is useful for accessing the field via an interface.
func (v *WellnessOfferingSource) GetConfigurationSchema() string { return v.ConfigurationSchema }

// GetApproximateUnitCost returns WellnessOfferingSource.ApproximateUnitCost, and is useful for accessing the field via an interface.
func (v *WellnessOfferingSource) GetApproximateUnitCost() int { return v.ApproximateUnitCost }

// GetSubsidyType returns WellnessOfferingSource.SubsidyType, and is useful for accessing the field via an interface.
func (v *WellnessOfferingSource) GetSubsidyType() SubsidyType { return v.SubsidyType }

// GetAppLink returns WellnessOfferingSource.AppLink, and is useful for accessing the field via an interface.
func (v *WellnessOfferingSource) GetAppLink() string { return v.AppLink }

// GetIconUrl returns WellnessOfferingSource.IconUrl, and is useful for accessing the field via an interface.
func (v *WellnessOfferingSource) GetIconUrl() string { return v.IconUrl }

// GetPriceRange returns WellnessOfferingSource.PriceRange, and is useful for accessing the field via an interface.
func (v *WellnessOfferingSource) GetPriceRange() WellnessOfferingSourcePriceRange {
	return v.PriceRange
}

// WellnessOfferingSourcePriceRange includes the requested fields of the GraphQL type PriceRange.
type WellnessOfferingSourcePriceRange struct {
	Low  int `json:"low"`
	High int `json:"high"`
}

// GetLow returns WellnessOfferingSourcePriceRange.Low, and is useful for accessing the field via an interface.
func (v *WellnessOfferingSourcePriceRange) GetLow() int { return v.Low }

// GetHigh returns WellnessOfferingSourcePriceRange.High, and is useful for accessing the field via an interface.
func (v *WellnessOfferingSourcePriceRange) GetHigh() int { return v.High }

// __ApproveModuleInput is used internally by genqlient
type __ApproveModuleInput struct {
	Input ApproveModulePublishInput `json:"input"`
}

// GetInput returns __ApproveModuleInput.Input, and is useful for accessing the field via an interface.
func (v *__ApproveModuleInput) GetInput() ApproveModulePublishInput { return v.Input }

// __AssignModuleReviewToSelfInput is used internally by genqlient
type __AssignModuleReviewToSelfInput struct {
	ModuleId string `json:"moduleId"`
}

// GetModuleId returns __AssignModuleReviewToSelfInput.ModuleId, and is useful for accessing the field via an interface.
func (v *__AssignModuleReviewToSelfInput) GetModuleId() string { return v.ModuleId }

// __CreateAppStoreListingInput is used internally by genqlient
type __CreateAppStoreListingInput struct {
	Input CreateWebAppInput `json:"input"`
}

// GetInput returns __CreateAppStoreListingInput.Input, and is useful for accessing the field via an interface.
func (v *__CreateAppStoreListingInput) GetInput() CreateWebAppInput { return v.Input }

// __CreateDraftModuleInput is used internally by genqlient
type __CreateDraftModuleInput struct {
	Input CreateDraftModuleInput `json:"input"`
}

// GetInput returns __CreateDraftModuleInput.Input, and is useful for accessing the field via an interface.
func (v *__CreateDraftModuleInput) GetInput() CreateDraftModuleInput { return v.Input }

// __DeleteAppStoreListingInput is used internally by genqlient
type __DeleteAppStoreListingInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteAppStoreListingInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteAppStoreListingInput) GetId() string { return v.Id }

// __DeleteModuleInput is used internally by genqlient
type __DeleteModuleInput struct {
	Input DeleteModuleInput `json:"input"`
}

// GetInput returns __DeleteModuleInput.Input, and is useful for accessing the field via an interface.
func (v *__DeleteModuleInput) GetInput() DeleteModuleInput { return v.Input }

// __EditAppStoreListingInput is used internally by genqlient
type __EditAppStoreListingInput struct {
	Id    string          `json:"id"`
	Edits EditWebAppInput `json:"edits"`
}

// GetId returns __EditAppStoreListingInput.Id, and is useful for accessing the field via an interface.
func (v *__EditAppStoreListingInput) GetId() string { return v.Id }

// GetEdits returns __EditAppStoreListingInput.Edits, and is useful for accessing the field via an interface.
func (v *__EditAppStoreListingInput) GetEdits() EditWebAppInput { return v.Edits }

// __FinalizeImageUploadInput is used internally by genqlient
type __FinalizeImageUploadInput struct {
	Input FinalizeUploadInput `json:"input"`
}

// GetInput returns __FinalizeImageUploadInput.Input, and is useful for accessing the field via an interface.
func (v *__FinalizeImageUploadInput) GetInput() FinalizeUploadInput { return v.Input }

// __GetAppStoreListingInput is used internally by genqlient
type __GetAppStoreListingInput struct {
	Id string `json:"id"`
}

// GetId returns __GetAppStoreListingInput.Id, and is useful for accessing the field via an interface.
func (v *__GetAppStoreListingInput) GetId() string { return v.Id }

// __GetDraftWellnessOfferingModuleInput is used internally by genqlient
type __GetDraftWellnessOfferingModuleInput struct {
	ModuleId string `json:"moduleId"`
}

// GetModuleId returns __GetDraftWellnessOfferingModuleInput.ModuleId, and is useful for accessing the field via an interface.
func (v *__GetDraftWellnessOfferingModuleInput) GetModuleId() string { return v.ModuleId }

// __GetPublishedModuleInput is used internally by genqlient
type __GetPublishedModuleInput struct {
	Id      string `json:"id"`
	Version string `json:"version"`
}

// GetId returns __GetPublishedModuleInput.Id, and is useful for accessing the field via an interface.
func (v *__GetPublishedModuleInput) GetId() string { return v.Id }

// GetVersion returns __GetPublishedModuleInput.Version, and is useful for accessing the field via an interface.
func (v *__GetPublishedModuleInput) GetVersion() string { return v.Version }

// __GetWellnessOfferingModuleInput is used internally by genqlient
type __GetWellnessOfferingModuleInput struct {
	ModuleId string `json:"moduleId"`
}

// GetModuleId returns __GetWellnessOfferingModuleInput.ModuleId, and is useful for accessing the field via an interface.
func (v *__GetWellnessOfferingModuleInput) GetModuleId() string { return v.ModuleId }

// __PublishModuleInput is used internally by genqlient
type __PublishModuleInput struct {
	Input PublishDraftModuleInputV2 `json:"input"`
}

// GetInput returns __PublishModuleInput.Input, and is useful for accessing the field via an interface.
func (v *__PublishModuleInput) GetInput() PublishDraftModuleInputV2 { return v.Input }

// __PublishModuleV3Input is used internally by genqlient
type __PublishModuleV3Input struct {
	Input PublishDraftModuleInputV3 `json:"input"`
}

// GetInput returns __PublishModuleV3Input.Input, and is useful for accessing the field via an interface.
func (v *__PublishModuleV3Input) GetInput() PublishDraftModuleInputV3 { return v.Input }

// __SetAppTileInput is used internally by genqlient
type __SetAppTileInput struct {
	Input SetPublicAppTileDraftModuleSourceInput `json:"input"`
}

// GetInput returns __SetAppTileInput.Input, and is useful for accessing the field via an interface.
func (v *__SetAppTileInput) GetInput() SetPublicAppTileDraftModuleSourceInput { return v.Input }

// __SetWellnessOfferingDraftModuleSourceInput is used internally by genqlient
type __SetWellnessOfferingDraftModuleSourceInput struct {
	Input SetDraftModuleWellnessOfferingSourceInput `json:"input"`
}

// GetInput returns __SetWellnessOfferingDraftModuleSourceInput.Input, and is useful for accessing the field via an interface.
func (v *__SetWellnessOfferingDraftModuleSourceInput) GetInput() SetDraftModuleWellnessOfferingSourceInput {
	return v.Input
}

// __StartImageUploadInput is used internally by genqlient
type __StartImageUploadInput struct {
	Input StartUploadInput `json:"input"`
}

// GetInput returns __StartImageUploadInput.Input, and is useful for accessing the field via an interface.
func (v *__StartImageUploadInput) GetInput() StartUploadInput { return v.Input }

// __UpdateDraftModuleInput is used internally by genqlient
type __UpdateDraftModuleInput struct {
	Input UpdateDraftModuleInput `json:"input"`
}

// GetInput returns __UpdateDraftModuleInput.Input, and is useful for accessing the field via an interface.
func (v *__UpdateDraftModuleInput) GetInput() UpdateDraftModuleInput { return v.Input }

func ApproveModule(
	ctx context.Context,
	client graphql.Client,
	input ApproveModulePublishInput,
) (*ApproveModuleResponse, error) {
	req := &graphql.Request{
		OpName: "ApproveModule",
		Query: `
mutation ApproveModule ($input: ApproveModulePublishInput!) {
	approveModulePublish(input: $input) {
		id
		version {
			version
		}
	}
}
`,
		Variables: &__ApproveModuleInput{
			Input: input,
		},
	}
	var err error

	var data ApproveModuleResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func AssignModuleReviewToSelf(
	ctx context.Context,
	client graphql.Client,
	moduleId string,
) (*AssignModuleReviewToSelfResponse, error) {
	req := &graphql.Request{
		OpName: "AssignModuleReviewToSelf",
		Query: `
mutation AssignModuleReviewToSelf ($moduleId: ID!) {
	assignDraftModuleForReview(moduleId: $moduleId) {
		assignedReviewer
		moduleId
	}
}
`,
		Variables: &__AssignModuleReviewToSelfInput{
			ModuleId: moduleId,
		},
	}
	var err error

	var data AssignModuleReviewToSelfResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func CreateAppStoreListing(
	ctx context.Context,
	client graphql.Client,
	input CreateWebAppInput,
) (*CreateAppStoreListingResponse, error) {
	req := &graphql.Request{
		OpName: "CreateAppStoreListing",
		Query: `
mutation CreateAppStoreListing ($input: CreateWebAppInput!) {
	createWebApp(input: $input) {
		id
	}
}
`,
		Variables: &__CreateAppStoreListingInput{
			Input: input,
		},
	}
	var err error

	var data CreateAppStoreListingResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func CreateDraftModule(
	ctx context.Context,
	client graphql.Client,
	input CreateDraftModuleInput,
) (*CreateDraftModuleResponse, error) {
	req := &graphql.Request{
		OpName: "CreateDraftModule",
		Query: `
mutation CreateDraftModule ($input: CreateDraftModuleInput!) {
	createDraftModule(input: $input) {
		id
	}
}
`,
		Variables: &__CreateDraftModuleInput{
			Input: input,
		},
	}
	var err error

	var data CreateDraftModuleResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func DeleteAppStoreListing(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteAppStoreListingResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteAppStoreListing",
		Query: `
mutation DeleteAppStoreListing ($id: ID!) {
	deleteApp(id: $id)
}
`,
		Variables: &__DeleteAppStoreListingInput{
			Id: id,
		},
	}
	var err error

	var data DeleteAppStoreListingResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func DeleteModule(
	ctx context.Context,
	client graphql.Client,
	input DeleteModuleInput,
) (*DeleteModuleResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteModule",
		Query: `
mutation DeleteModule ($input: DeleteModuleInput!) {
	deleteModule(input: $input) {
		id
	}
}
`,
		Variables: &__DeleteModuleInput{
			Input: input,
		},
	}
	var err error

	var data DeleteModuleResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func EditAppStoreListing(
	ctx context.Context,
	client graphql.Client,
	id string,
	edits EditWebAppInput,
) (*EditAppStoreListingResponse, error) {
	req := &graphql.Request{
		OpName: "EditAppStoreListing",
		Query: `
mutation EditAppStoreListing ($id: ID!, $edits: EditWebAppInput!) {
	editWebApp(id: $id, edits: $edits)
}
`,
		Variables: &__EditAppStoreListingInput{
			Id:    id,
			Edits: edits,
		},
	}
	var err error

	var data EditAppStoreListingResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func FinalizeImageUpload(
	ctx context.Context,
	client graphql.Client,
	input FinalizeUploadInput,
) (*FinalizeImageUploadResponse, error) {
	req := &graphql.Request{
		OpName: "FinalizeImageUpload",
		Query: `
mutation FinalizeImageUpload ($input: FinalizeUploadInput!) {
	finalizeUpload(input: $input) {
		moduleId
	}
}
`,
		Variables: &__FinalizeImageUploadInput{
			Input: input,
		},
	}
	var err error

	var data FinalizeImageUploadResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetAppStoreListing(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetAppStoreListingResponse, error) {
	req := &graphql.Request{
		OpName: "GetAppStoreListing",
		Query: `
query GetAppStoreListing ($id: ID!) {
	app(id: $id) {
		__typename
		name
		description
		authorDisplay
		image
		... on AppStoreWebApplication {
			url
		}
	}
}
`,
		Variables: &__GetAppStoreListingInput{
			Id: id,
		},
	}
	var err error

	var data GetAppStoreListingResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetDraftWellnessOfferingModule(
	ctx context.Context,
	client graphql.Client,
	moduleId string,
) (*GetDraftWellnessOfferingModuleResponse, error) {
	req := &graphql.Request{
		OpName: "GetDraftWellnessOfferingModule",
		Query: `
query GetDraftWellnessOfferingModule ($moduleId: ID!) {
	draftModule(moduleId: $moduleId) {
		... DraftWellnessOfferingModule
	}
}
fragment DraftWellnessOfferingModule on DraftMarketplaceModule {
	id
	title
	description
	source {
		__typename
		... on WellnessOffering {
			... WellnessOfferingSource
		}
	}
}
fragment WellnessOfferingSource on WellnessOffering {
	id
	provider
	imageUrl
	infoUrl
	configurationSchema
	approximateUnitCost
	subsidyType
	appLink
	iconUrl
	priceRange {
		low
		high
	}
}
`,
		Variables: &__GetDraftWellnessOfferingModuleInput{
			ModuleId: moduleId,
		},
	}
	var err error

	var data GetDraftWellnessOfferingModuleResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetPublishedModule(
	ctx context.Context,
	client graphql.Client,
	id string,
	version string,
) (*GetPublishedModuleResponse, error) {
	req := &graphql.Request{
		OpName: "GetPublishedModule",
		Query: `
query GetPublishedModule ($id: ID!, $version: String) {
	myModule(moduleId: $id, version: $version) {
		... AppTileModule
	}
}
fragment AppTileModule on MarketplaceModule {
	title
	description
	version
	source {
		__typename
		... on AppTile {
			id
		}
	}
	iconV2 {
		url
		fileName
		fileExtension
	}
}
`,
		Variables: &__GetPublishedModuleInput{
			Id:      id,
			Version: version,
		},
	}
	var err error

	var data GetPublishedModuleResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetWellnessOfferingModule(
	ctx context.Context,
	client graphql.Client,
	moduleId string,
) (*GetWellnessOfferingModuleResponse, error) {
	req := &graphql.Request{
		OpName: "GetWellnessOfferingModule",
		Query: `
query GetWellnessOfferingModule ($moduleId: ID!) {
	myModule(moduleId: $moduleId) {
		... WellnessOfferingModule
	}
}
fragment WellnessOfferingModule on MarketplaceModule {
	id
	title
	description
	version
	source {
		__typename
		... on WellnessOffering {
			... WellnessOfferingSource
		}
	}
}
fragment WellnessOfferingSource on WellnessOffering {
	id
	provider
	imageUrl
	infoUrl
	configurationSchema
	approximateUnitCost
	subsidyType
	appLink
	iconUrl
	priceRange {
		low
		high
	}
}
`,
		Variables: &__GetWellnessOfferingModuleInput{
			ModuleId: moduleId,
		},
	}
	var err error

	var data GetWellnessOfferingModuleResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func PublishModule(
	ctx context.Context,
	client graphql.Client,
	input PublishDraftModuleInputV2,
) (*PublishModuleResponse, error) {
	req := &graphql.Request{
		OpName: "PublishModule",
		Query: `
mutation PublishModule ($input: PublishDraftModuleInputV2!) {
	publishDraftModuleV2(input: $input) {
		id
		version {
			version
		}
	}
}
`,
		Variables: &__PublishModuleInput{
			Input: input,
		},
	}
	var err error

	var data PublishModuleResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func PublishModuleV3(
	ctx context.Context,
	client graphql.Client,
	input PublishDraftModuleInputV3,
) (*PublishModuleV3Response, error) {
	req := &graphql.Request{
		OpName: "PublishModuleV3",
		Query: `
mutation PublishModuleV3 ($input: PublishDraftModuleInputV3!) {
	publishDraftModuleV3(input: $input) {
		id
		publishReviewId
		version {
			version
		}
	}
}
`,
		Variables: &__PublishModuleV3Input{
			Input: input,
		},
	}
	var err error

	var data PublishModuleV3Response
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func SetAppTile(
	ctx context.Context,
	client graphql.Client,
	input SetPublicAppTileDraftModuleSourceInput,
) (*SetAppTileResponse, error) {
	req := &graphql.Request{
		OpName: "SetAppTile",
		Query: `
mutation SetAppTile ($input: SetPublicAppTileDraftModuleSourceInput!) {
	setPublicAppTileDraftModuleSource(input: $input) {
		moduleId
	}
}
`,
		Variables: &__SetAppTileInput{
			Input: input,
		},
	}
	var err error

	var data SetAppTileResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func SetWellnessOfferingDraftModuleSource(
	ctx context.Context,
	client graphql.Client,
	input SetDraftModuleWellnessOfferingSourceInput,
) (*SetWellnessOfferingDraftModuleSourceResponse, error) {
	req := &graphql.Request{
		OpName: "SetWellnessOfferingDraftModuleSource",
		Query: `
mutation SetWellnessOfferingDraftModuleSource ($input: SetDraftModuleWellnessOfferingSourceInput!) {
	setWellnessOfferingDraftModuleSource(input: $input) {
		id
	}
}
`,
		Variables: &__SetWellnessOfferingDraftModuleSourceInput{
			Input: input,
		},
	}
	var err error

	var data SetWellnessOfferingDraftModuleSourceResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func StartImageUpload(
	ctx context.Context,
	client graphql.Client,
	input StartUploadInput,
) (*StartImageUploadResponse, error) {
	req := &graphql.Request{
		OpName: "StartImageUpload",
		Query: `
mutation StartImageUpload ($input: StartUploadInput!) {
	startUpload(input: $input) {
		id
		url
		fields
	}
}
`,
		Variables: &__StartImageUploadInput{
			Input: input,
		},
	}
	var err error

	var data StartImageUploadResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func UpdateDraftModule(
	ctx context.Context,
	client graphql.Client,
	input UpdateDraftModuleInput,
) (*UpdateDraftModuleResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateDraftModule",
		Query: `
mutation UpdateDraftModule ($input: UpdateDraftModuleInput!) {
	updateDraftModule(input: $input) {
		id
	}
}
`,
		Variables: &__UpdateDraftModuleInput{
			Input: input,
		},
	}
	var err error

	var data UpdateDraftModuleResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
