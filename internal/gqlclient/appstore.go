package gqlclient

// Generated by ./cmd/service-client-gen

import (
	"context"
	"github.com/Khan/genqlient/graphql"
	"github.com/lifeomic/terraform-provider-phc/internal/client"
)

const (
	appStoreServiceName     = "app-store-service"
	appStoreDefaultEndpoint = "https://api.us.lifeomic.com/api/v1/graphql"
)

type AppStoreService interface {
	GetAppStoreListing(ctx context.Context, id string) (*GetAppStoreListingResponse, error)
	DeleteAppStoreListing(ctx context.Context, id string) (*DeleteAppStoreListingResponse, error)
	CreateAppStoreListing(ctx context.Context, input CreateWebAppInput) (*CreateAppStoreListingResponse, error)
	EditAppStoreListing(ctx context.Context, id string, edits EditWebAppInput) (*EditAppStoreListingResponse, error)
}

type appStoreClient struct {
	client graphql.Client
}

func (a *appStoreClient) GetAppStoreListing(ctx context.Context, id string) (*GetAppStoreListingResponse, error) {
	return GetAppStoreListing(ctx, a.client, id)
}

func (a *appStoreClient) DeleteAppStoreListing(ctx context.Context, id string) (*DeleteAppStoreListingResponse, error) {
	return DeleteAppStoreListing(ctx, a.client, id)
}

func (a *appStoreClient) CreateAppStoreListing(ctx context.Context, input CreateWebAppInput) (*CreateAppStoreListingResponse, error) {
	return CreateAppStoreListing(ctx, a.client, input)
}

func (a *appStoreClient) EditAppStoreListing(ctx context.Context, id string, edits EditWebAppInput) (*EditAppStoreListingResponse, error) {
	return EditAppStoreListing(ctx, a.client, id, edits)
}

func NewAppStoreClient(authToken string, accountID string) AppStoreService {
	transport := client.NewAuthedTransport(authToken, accountID, appStoreServiceName)
	return &appStoreClient{client: graphql.NewClient(appStoreDefaultEndpoint, transport)}
}
